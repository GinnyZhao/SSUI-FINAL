[{"/Users/Ginny 1/Desktop/SSUI-FINAL/src/index.js":"1","/Users/Ginny 1/Desktop/SSUI-FINAL/src/App.js":"2","/Users/Ginny 1/Desktop/SSUI-FINAL/src/reducers/rootReducer.js":"3","/Users/Ginny 1/Desktop/SSUI-FINAL/src/reducers/countriesReducer.js":"4","/Users/Ginny 1/Desktop/SSUI-FINAL/src/reducers/collectionReducer.js":"5","/Users/Ginny 1/Desktop/SSUI-FINAL/src/reducers/countryDataReducer.js":"6","/Users/Ginny 1/Desktop/SSUI-FINAL/src/reducers/cacheReducer.js":"7","/Users/Ginny 1/Desktop/SSUI-FINAL/src/components/NavBar.js":"8","/Users/Ginny 1/Desktop/SSUI-FINAL/src/containers/New.js":"9","/Users/Ginny 1/Desktop/SSUI-FINAL/src/components/Footer.js":"10","/Users/Ginny 1/Desktop/SSUI-FINAL/src/containers/Show.js":"11","/Users/Ginny 1/Desktop/SSUI-FINAL/src/containers/Collection.js":"12","/Users/Ginny 1/Desktop/SSUI-FINAL/src/containers/Home.js":"13","/Users/Ginny 1/Desktop/SSUI-FINAL/src/containers/Overlay.js":"14","/Users/Ginny 1/Desktop/SSUI-FINAL/src/components/Loader.js":"15","/Users/Ginny 1/Desktop/SSUI-FINAL/src/components/CountryDropdown.js":"16","/Users/Ginny 1/Desktop/SSUI-FINAL/src/components/Province.js":"17","/Users/Ginny 1/Desktop/SSUI-FINAL/src/components/State.js":"18","/Users/Ginny 1/Desktop/SSUI-FINAL/src/components/Country.js":"19","/Users/Ginny 1/Desktop/SSUI-FINAL/src/components/Instructions.js":"20","/Users/Ginny 1/Desktop/SSUI-FINAL/src/components/Countries.js":"21","/Users/Ginny 1/Desktop/SSUI-FINAL/src/d3/Visual.js":"22","/Users/Ginny 1/Desktop/SSUI-FINAL/src/d3/Viz.js":"23","/Users/Ginny 1/Desktop/SSUI-FINAL/src/d3/DrawBar.js":"24","/Users/Ginny 1/Desktop/SSUI-FINAL/src/d3/DrawLine.js":"25","/Users/Ginny 1/Desktop/SSUI-FINAL/src/d3/Color.js":"26","/Users/Ginny 1/Desktop/SSUI-FINAL/src/containers/Simulation.js":"27","/Users/Ginny 1/Desktop/SSUI-FINAL/src/containers/config.js":"28","/Users/Ginny 1/Desktop/SSUI-FINAL/src/containers/airport.js":"29","/Users/Ginny 1/Desktop/SSUI-FINAL/src/containers/linedata.js":"30"},{"size":717,"mtime":1606810448934,"results":"31","hashOfConfig":"32"},{"size":1197,"mtime":1607622129661,"results":"33","hashOfConfig":"32"},{"size":627,"mtime":1607260243700,"results":"34","hashOfConfig":"32"},{"size":207,"mtime":1606810448936,"results":"35","hashOfConfig":"32"},{"size":226,"mtime":1606810448936,"results":"36","hashOfConfig":"32"},{"size":219,"mtime":1606810448936,"results":"37","hashOfConfig":"32"},{"size":467,"mtime":1606810448935,"results":"38","hashOfConfig":"32"},{"size":1728,"mtime":1607517939526,"results":"39","hashOfConfig":"32"},{"size":1183,"mtime":1606908395428,"results":"40","hashOfConfig":"32"},{"size":735,"mtime":1606987450585,"results":"41","hashOfConfig":"32"},{"size":3388,"mtime":1607443718188,"results":"42","hashOfConfig":"32"},{"size":2748,"mtime":1607442653523,"results":"43","hashOfConfig":"32"},{"size":4172,"mtime":1607622235676,"results":"44","hashOfConfig":"32"},{"size":2745,"mtime":1607324788808,"results":"45","hashOfConfig":"32"},{"size":154,"mtime":1606810448379,"results":"46","hashOfConfig":"32"},{"size":3913,"mtime":1607311359801,"results":"47","hashOfConfig":"32"},{"size":1690,"mtime":1606810448380,"results":"48","hashOfConfig":"32"},{"size":2570,"mtime":1606811687579,"results":"49","hashOfConfig":"32"},{"size":2233,"mtime":1607323202754,"results":"50","hashOfConfig":"32"},{"size":871,"mtime":1607519259898,"results":"51","hashOfConfig":"32"},{"size":2230,"mtime":1607323606785,"results":"52","hashOfConfig":"32"},{"size":305,"mtime":1607323843813,"results":"53","hashOfConfig":"32"},{"size":347,"mtime":1606810448933,"results":"54","hashOfConfig":"32"},{"size":6168,"mtime":1607590603712,"results":"55","hashOfConfig":"32"},{"size":4917,"mtime":1607591523278,"results":"56","hashOfConfig":"32"},{"size":435,"mtime":1607309523358,"results":"57","hashOfConfig":"32"},{"size":17464,"mtime":1607601163157,"results":"58","hashOfConfig":"32"},{"size":1650,"mtime":1607311980000,"results":"59","hashOfConfig":"32"},{"size":15111,"mtime":1607005194000,"results":"60","hashOfConfig":"32"},{"size":265,"mtime":1607307796000,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"58z1tg",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"64"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"64"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Ginny 1/Desktop/SSUI-FINAL/src/index.js",[],["136","137"],"/Users/Ginny 1/Desktop/SSUI-FINAL/src/App.js",[],"/Users/Ginny 1/Desktop/SSUI-FINAL/src/reducers/rootReducer.js",[],"/Users/Ginny 1/Desktop/SSUI-FINAL/src/reducers/countriesReducer.js",[],"/Users/Ginny 1/Desktop/SSUI-FINAL/src/reducers/collectionReducer.js",[],"/Users/Ginny 1/Desktop/SSUI-FINAL/src/reducers/countryDataReducer.js",[],"/Users/Ginny 1/Desktop/SSUI-FINAL/src/reducers/cacheReducer.js",[],"/Users/Ginny 1/Desktop/SSUI-FINAL/src/components/NavBar.js",[],"/Users/Ginny 1/Desktop/SSUI-FINAL/src/containers/New.js",["138"],"import React, { useState, useEffect } from 'react';\nimport CountryDropdown from '../components/CountryDropdown'\nimport { Loader } from '../components/Loader'\nimport { useDispatch } from \"react-redux\";\nimport { Instructions } from '../components/Instructions';\n\nconst New = () => {\n    const [isLoading, setIsLoading] = useState(false);\n    const dispatch = useDispatch()\n\n    // fetch basic country data including name, slug and code from Coronavirus COVID19 API\n    useEffect( () => {\n        async function fetchData() {\n            setIsLoading(true);\n\n            var requestOptions = {\n                method: 'GET',\n                redirect: 'follow'\n              };\n            const response = await fetch(\"https://api.covid19api.com/countries\", requestOptions)\n            const data = await response.json()\n            dispatch({ type: 'addCountries', payload: data })\n            setIsLoading(false);\n        }\n        fetchData();\n    }, []); \n\n    return (\n\n        <div>\n            <Instructions />\n\n            {isLoading ? (\n                < Loader />\n            ) : (\n                < CountryDropdown />\n            )}\n        </div>\n    )\n}\n\nexport default New","/Users/Ginny 1/Desktop/SSUI-FINAL/src/components/Footer.js",[],"/Users/Ginny 1/Desktop/SSUI-FINAL/src/containers/Show.js",["139","140","141","142","143","144","145","146","147","148","149"],"// need to add loader logic\nimport data from '../components/data/data.json'\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport Province from '../components/Province'\nimport State from '../components/State'\nimport Country from '../components/Country'\n\nimport { Card } from 'react-bootstrap'\nimport { Col } from 'react-bootstrap'\nimport { Row } from 'react-bootstrap'\n\nimport { selectAll } from 'd3'\nimport { NavLink } from 'react-router-dom';\n\n\n\nconst Show = (props) => {\n    // const cache = useSelector(state => state.cache)\n    // const collection = useSelector(state => state.collection)\n    console.log(props);\n    const name = props.location.countryName;\n    // let nameCap = name.charAt(0).toUpperCase() + name.slice(1)\n    // if (nameCap === \"United-states\") {\n    //     nameCap = \"United States of America\";\n    // }\n    // if (nameCap === \"Korea-south\") {\n    //     nameCap = \"Korea (South)\"\n    // }\n\n    const countryData = useSelector(state => state.countryData)\n    // let index = 0;\n    // console.log(nameCap)\n    // console.log(Object.keys(countryData[0])[0])\n\n    let index = countryData.findIndex(obj => Object.keys(obj)[0] === name);\n    console.log(index);\n\n    const [caseType, setCaseType] = useState(\"\");\n        return (\n            <div>\n                <Row >\n                    <Col xs=\"12\" sm=\"6\" md=\"4\" lg=\"3\" xl=\"3\">\n                        <div className=\"card button-col\">\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"cases block\" value=\"total\">Total Cases</button>\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"deathsPerOneMillion block\" value=\"deaths\">Deaths</button>\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"activee block\" value=\"active\"> Active Cases</button>\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"recovered block\" value=\"recovered\">Recovered Cases</button>\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"daily block\" value=\"daily\"> Daily Confirmed Cases </button>\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"daily_deaths block\" value=\"daily_deaths\"> Daily Deaths </button>\n                        </div>\n                        <NavLink to='/collection'>\n                            <button className=\"dark\" style={{\"font-size\": \"16px\"}}> Back to side-by-side View </button>\n                        </NavLink>\n                    </Col>\n\n                    <Col sm=\"12\" md=\"9\" lg=\"9\" xl=\"9\">\n                        <Card>\n                            <NavLink to='/collection'>\n                                <Country caseType={caseType} country={countryData[index]}/>\n                                {/* <Province caseType={caseType} province={provincesData[0].Country} provinceData={provincesData}/>  */}\n                            </NavLink>\n                        </Card>\n                    </Col>\n                </Row>\n            </div>\n        )\n\n}\n\nexport default Show","/Users/Ginny 1/Desktop/SSUI-FINAL/src/containers/Collection.js",["150","151","152","153","154","155"],"import React, { useState } from 'react';\nimport { Redirect } from \"react-router\"\nimport Country from '../components/Country'\nimport { selectAll } from 'd3'\nimport { useSelector } from 'react-redux'\nimport { NavLink } from 'react-router-dom';\nimport \"./Collection.css\"\n\n\nconst Collection = () => {\n    const countryData = useSelector(state => state.countryData)\n    const [caseType, setCaseType] = useState(\"\");\n\n    if (countryData) {\n        return (\n            <div className=\"row\">\n                    <div className=\"col-sm-12 col-md-6 col-lg-3\">\n                        <div className='card button-col'>\n                            <button autofocus onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove(), event.preventDefault())} className=\"cases block\" value=\"total\">Total Cases</button>\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"deathsPerOneMillion block\" value=\"deaths\">Deaths</button>\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"activee block\" value=\"active\"> Active Cases</button>\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"recovered block\" value=\"recovered\">Recovered Cases</button>\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"daily block\" value=\"daily\"> Daily Confirmed Cases </button>\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"daily_deaths block\" value=\"daily_deaths\"> Daily Deaths </button>\n                        </div>\n                        <NavLink to='/new'>\n                            <button className=\"dark\"> Back to Main </button>\n                        </NavLink>\n                    </div>\n\n                    <div className=\"col-sm-12 col-md-6 col-lg-9\">\n                        <div className=\"countries\">\n                            {countryData.map((country, index) => { \n                                return (\n                                    <div className=\"country\">\n                                        <Country caseType={caseType} country={country}/>  \n                                    </div>\n                                )\n                            })}\n                        </div>\n                    </div>\n            </div>\n        )\n    } else {\n        return <Redirect to='/' />\n        // return <Redirect to={process.env.PUBLIC_URL} />\n        // return <h3>Use the Buttons Above to Get Started</h3>\n\n    }\n}\n\nexport default Collection\n","/Users/Ginny 1/Desktop/SSUI-FINAL/src/containers/Home.js",[],"/Users/Ginny 1/Desktop/SSUI-FINAL/src/containers/Overlay.js",["156","157","158","159","160","161"],"import React, { useState } from 'react';\nimport { Redirect } from \"react-router\"\nimport Countries from '../components/Countries'\nimport { selectAll } from 'd3'\nimport { useSelector } from 'react-redux'\nimport { NavLink } from 'react-router-dom';\n\n\nconst Overlay = () => {\n    const countryData = useSelector(state => state.countryData)\n    console.log(countryData)\n    const [caseType, setCaseType] = useState(\"\");\n\n    if (countryData) {\n        return (\n            <div className=\"row\">\n                    <div className=\"col-sm-12 col-md-6 col-lg-3\">\n                        <div className='card button-col'>\n                            <button autofocus onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"cases block\" value=\"total\">Total Cases</button>\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"deathsPerOneMillion block\" value=\"deaths\">Deaths</button>\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"activee block\" value=\"active\"> Active Cases</button>\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"recovered block\" value=\"recovered\">Recovered Cases</button>\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"daily block\" value=\"daily\"> Daily Confirmed Cases </button>\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"daily_deaths block\" value=\"daily_deaths\"> Daily Deaths </button>\n                        </div>\n                        <NavLink to='/new'>\n                            <button className=\"dark\"> Back to Main </button>\n                        </NavLink>\n                    </div>\n\n                    <div className=\"col-sm-12 col-md-6 col-lg-9\">\n                        <Countries caseType={caseType} countries={countryData}/>  \n                            {/* {countryData.map((country, index) => { \n                                return (\n                                    <div className=\"country\">\n                                            <Countries caseType={caseType} countries={countryData}/>  \n                                    </div>\n                                )\n                            })} */}\n                    </div>\n            </div>\n        )\n    } else {\n        return <Redirect to='/' />\n        // return <Redirect to={process.env.PUBLIC_URL} />\n        // return <h3>Use the Buttons Above to Get Started</h3>\n\n    }\n}\n\nexport default Overlay\n","/Users/Ginny 1/Desktop/SSUI-FINAL/src/components/Loader.js",[],"/Users/Ginny 1/Desktop/SSUI-FINAL/src/components/CountryDropdown.js",["162","163"],"import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { NavLink } from 'react-router-dom';\nimport \"./CountryDropdown.css\";\nimport Delete from \"../img/delete.png\";\n\nconst CountryDropdown = (props) => {\n\n    const countries = useSelector(state => state.countries)\n    const collection = useSelector(state => state.collection)\n    const dispatch = useDispatch()\n    let display = true;\n\n\n// Fetch specific country covid data based on user's choice in the select option\n    const fetchCountry = (event) => {\n        const [slug, country, ISO2] = event.target.value.split(\",\") \n\n        async function fetchData() {\n\n            const requestOptions = {\n                method: 'GET',\n                redirect: 'follow'\n            };\n            \n            const response = await fetch(`https://api.covid19api.com/total/country/` + slug, requestOptions)\n\n            const data = await response.json()\n            const parsedData = data.filter(day => day.Confirmed > 0)\n\n            dispatch( { type: 'addCountryData', payload: { [country]: parsedData }} )\n            dispatch( { type: 'addCountryToCollection', payload: {slug, country, ISO2}} )\n        }\n        fetchData();\n    }\n\n    const invalid = () => collection.length === 0\n\n    return (\n        <div className=\"row\">\n            <div className=\"col-sm-12 col-md-6 col-lg-3\">\n\n                <h6 className=\"instruction\"> Select country to display: </h6>\n\n                <select class=\"dropdown\" onChange={event => fetchCountry(event)}>\n                \n                    <option placeholder=\"Countries\"> Countries </option>\n                    {countries.sort((a, b) => (a.Country > b.Country) ? 1 : -1).map(country => (\n                        <option\n                            id={country.Slug}\n                            key={country.Slug}\n                            value={[country.Slug, country.Country, country.ISO2]}\n                        >\n                        {country.Country}\n                        </option> \n                    ))}\n                </select>\n\n                <NavLink to='/collection'>\n                    <button className=\"dark\" disabled={invalid()}>View side-by-side plot</button>\n                </NavLink>\n                \n                <NavLink to=\"/overlay\">\n                    <button className=\"dark\" disabled={invalid()}> View overlay plot </button>\n                </NavLink>\n                {/* <button className=\"dark\" disabled={invalid()} onClick={() => {display = false}}> Reset </button> */}\n            </div>\n\n            <div className=\"col-sm-12 col-md-6 col-lg-9\">\n                <div className=\"countries\">\n                {collection.map( (country, index) => {\n                    const flagUrl = `https://disease.sh/assets/img/flags/${country.ISO2.toLowerCase()}.png`\n                    // const flagUrl = `https://www.countryflags.io/${country.ISO2.toLowerCase()}/flat/64.png`\n                    // const flagUrl = `https://flagcdn.com/256x192/${country.ISO2.toLowerCase()}.png`\n                    const worldUrl = `https://freesvg.org/img/Globe-Icon-Umber.png`\n\n                    return (\n\n                            <div className={display ? \"country\" : \"none\"}>\n                                <img className=\"flag\" key={country.slug} src={flagUrl} onError={(e)=>{ \n                                    if (e.target.src !== worldUrl) {\n                                        e.target.src=worldUrl;}\n                                    }}/>\n                                <h5 className=\"countryName\">{country.country}</h5>\n                                {/* <button className=\"delete\" onClick={() => {collection.splice(index, 1)}}> Delete </button> */}\n                            </div>\n                    )\n                })}\n                </div>\n            </div>\n\n            </div>\n\n    )\n}\n\nexport default CountryDropdown\n\n\n","/Users/Ginny 1/Desktop/SSUI-FINAL/src/components/Province.js",["164","165","166","167","168","169"],"import React from 'react';\nimport Viz from '../d3/Viz'\nimport { useSelector } from 'react-redux'\nimport { NavLink } from 'react-router-dom';\nimport { Loader } from './Loader'\n\nconst Province = ({caseType, province, provinceData}) => {\n    province ? province = province : province = provinceData[0].Country\n    console.log(province)\n    console.log(provinceData)\n    const totalCases = () => provinceData.length === 0 ? 0 : provinceData[provinceData.length-1].Confirmed\n    const slug = (province) => {\n        return province\n        .toString()\n        .trim()\n        .toLowerCase()\n        .replace(/\\s+/g, \"-\")\n        .replace(/[^\\w\\-]+/g, \"\")\n        .replace(/\\-\\-+/g, \"-\")\n        .replace(/^-+/, \"\")\n        .replace(/-+$/, \"\");\n    }\n\n        const array = []\n        const parseData = (provinceData, array) => {\n            provinceData.forEach( (day, index) => {\n                array.push({\n                    dayCount: index + 1,\n                    date: new Date(day.Date),\n                    total: day.Confirmed, \n                    active: day.Active, \n                    recovered: day.Recovered, \n                    deaths: day.Deaths\n                })\n            })\n            return array\n        }\n\n    if (provinceData) {\n\n        return (\n                // <NavLink to={{\n                //     pathname: `/countries/${slug}`,\n                //     slug\n                //     }}>\n                    <Viz countryName={province} totalCases={totalCases()} dailyData={parseData(provinceData, array)} caseType={caseType} slug={slug(province)}/>\n                // </NavLink>\n        )\n    } else {\n        return <Loader />\n    }\n}\n\nexport default Province","/Users/Ginny 1/Desktop/SSUI-FINAL/src/components/State.js",["170","171","172","173"],"import React from 'react';\nimport Viz from '../d3/Viz'\n\nconst State = ({caseType, state, stateData, countryName}) => {\n    state ? state = state : state = countryName\n\n    const slug = (state) => {\n        return state\n        .toString()\n        .trim()\n        .toLowerCase()\n        .replace(/\\s+/g, \"-\")\n        .replace(/[^\\w\\-]+/g, \"\")\n        .replace(/\\-\\-+/g, \"-\")\n        .replace(/^-+/, \"\")\n        .replace(/-+$/, \"\");\n    }\n\n\n    // need to refactor to merge entries for each day\n        const array = []\n        const parseData = (stateData, array) => {\n            stateData.forEach( day => {\n                const date = day.Date.substring(0, 10)\n                if (!array.includes(date)) {\n                    array.push(date)\n                }\n            })\n\n            const dateArray = array.map(date => stateData.filter(day =>  day.Date.substring(0,10) === date))\n\n            const parsedData = dateArray.map( (d, index) => {\n                const dayCount = index + 1\n                const date = new Date(d[0].Date)\n\n                const total = () => {\n                    let sum = 0\n                    for (let element of d) {\n                        sum += element.Confirmed\n                    }\n                    return sum\n                }\n\n                const active = () => {\n                    let sum = 0\n                    for (let element of d) {\n                        sum += element.Active\n                    }\n                    return sum\n                }\n\n                const recovered = () => {\n                    let sum = 0\n                    for (let element of d) {\n                        sum += element.Recovered\n                    }\n                    return sum\n                }\n\n                const deaths = () => {\n                    let sum = 0\n                    for (let element of d) {\n                        sum += element.Deaths\n                    }\n                    return sum\n                }\n\n                return {dayCount, date, total: total(), active: active(), recovered: recovered(), deaths: deaths()}\n            })\n            return parsedData\n        }\n\n        const dailyData = parseData(stateData, array)\n        const totalCases = dailyData[dailyData.length - 1].total\n\n        return (\n            <Viz countryName={state} totalCases={totalCases} dailyData={dailyData} caseType={caseType} slug={slug(state)}/>\n        )\n}\n\nexport default State\n\n\n    // <NavLink to={{\n    //     pathname: `/countries/${slug}`,\n    //     slug\n    //     }}>\n    // </NavLink>","/Users/Ginny 1/Desktop/SSUI-FINAL/src/components/Country.js",[],"/Users/Ginny 1/Desktop/SSUI-FINAL/src/components/Instructions.js",[],"/Users/Ginny 1/Desktop/SSUI-FINAL/src/components/Countries.js",["174","175"],"import React from 'react';\nimport Visual from '../d3/Visual'\nimport { useSelector } from 'react-redux'\nimport { NavLink } from 'react-router-dom';\n\nconst Countries = ({caseType, countries}) => {\n    const collection = useSelector(state => state.collection)\n    const res =  []\n    const slug_res = []\n    const names = []\n\n\n    countries.map((country, idx) => {\n        const countryName = Object.keys(country)[0]\n        const dailyData = country[countryName]       \n        const slug = collection.find(obj => obj.country === countryName).slug\n\n        const array = []\n        const parseData = (data, array) => {\n            data.forEach( (day, index) => {\n                let newCases = 0;\n                let newDeaths = 0;\n                if (index === 0) {\n                    newCases = 0;\n                    newDeaths = 0;\n                } else {\n                    newCases = day.Confirmed - data[index-1].Confirmed;\n                    newDeaths = day.Deaths - data[index-1].Deaths;\n\n                }\n                array.push({\n                    dayCount: index + 1,\n                    date: new Date(day.Date),\n                    total: day.Confirmed, \n                    active: day.Active, \n                    recovered: day.Recovered, \n                    deaths: day.Deaths,\n                    daily: newCases,\n                    daily_deaths: newDeaths,\n                })\n            })\n            console.log(array);\n            return array\n        }\n        res.push(parseData(dailyData, array));\n        slug_res.push(slug);\n        names.push(countryName);\n    })\n\n    console.log(res)\n    console.log(slug_res)\n\n    return (\n        <Visual names = {names} data = {res} caseType = {caseType} slugs = {slug_res}/>\n    )\n\n    // const totalCases = () => dailyData.length === 0 ? 0 : dailyData[dailyData.length-1].Confirmed\n\n    \n\n    // return (\n    //     <NavLink to={{\n    //         pathname: `/countries/${slug}`,\n    //         slug,\n    //         countryName\n    //         }}>\n    //         <Viz countryName={countryName} totalCases={totalCases()} dailyData={parseData(dailyData, array)} caseType={caseType} slug={slug}/>\n    //     </NavLink>\n    // )\n}\n\nexport default Countries\n\n","/Users/Ginny 1/Desktop/SSUI-FINAL/src/d3/Visual.js",["176"],"import React, { useEffect } from 'react';\nimport DrawLine from './DrawLine'\n\nconst Visual = ( {names, data, caseType, slugs}) => {\n\n    useEffect( () => {\n\n        DrawLine(names, data, slugs, caseType)\n    }, [caseType])\n\n    return (\n        <div className={\"viz\"} ></div>\n    )\n}\n\nexport default Visual","/Users/Ginny 1/Desktop/SSUI-FINAL/src/d3/Viz.js",["177"],"import React, { useEffect } from 'react';\nimport DrawBar from './DrawBar'\n\nconst Viz = ( {caseType, countryName, totalCases, dailyData, slug}) => {\n\n    useEffect( () => {\n\n        DrawBar(countryName, totalCases, dailyData, slug, caseType)\n    }, [caseType])\n\n    return (\n        <div className={\"viz\" + slug} ></div>\n    )\n}\n\nexport default Viz","/Users/Ginny 1/Desktop/SSUI-FINAL/src/d3/DrawBar.js",["178","179","180"],"import { max, scaleBand, scaleLinear, axisBottom, axisLeft, select } from 'd3';\nimport { line, curveMonotoneX } from 'd3-shape';\n// import * as d3 from \"d3\";\nimport d3Tip from \"d3-tip\";\nimport { color } from './Color'\n\nconst DrawBar = (countryName, totalCases, dailyData, id, caseType) => {\n    console.log(dailyData)\n\n    caseType ? caseType = caseType : caseType = \"total\"\n\n    // captilize the first character\n    function capFirst(string) {\n        return string.charAt(0).toUpperCase() + string.slice(1);\n    }\n\n    // setting up constants for sizes\n    const width = 960\n    const height = 500\n    const padding = .2\n    const margin = ({top: 80, right: 0, bottom: 80, left: 80})\n    const innerWidth = width - margin.left - margin.right;\n    // const innerHeight = height - margin.top - margin.bottom;\n    const vizName = \"viz\" + id\n\n    // setting constants for text labels and title\n    const xAxisLabel = \"Number of Days\"\n    const yAxisLabel = caseType ? `Number of Cases: ${capFirst(caseType)}` : \"Number of Cases\"\n    const title = countryName\n    const subtitle = () => {\n        if (dailyData.length > 0) {\n            return totalCases.toLocaleString('en') + \" COVID-19 Cases Reported Since \" + dailyData[0].date.toLocaleDateString()\n        } else {\n            return totalCases + \" COVID-19 Cases Reported\"\n        }\n    }\n\n    const xScale = scaleBand()\n        .domain(dailyData.map(d => d.dayCount))\n        .range([margin.left, width - margin.right])\n        .padding(padding)\n\n    const yScale = scaleLinear()\n        .domain([0, max(dailyData, d => d[`${caseType}`])])\n        .range([height - margin.bottom, margin.top])\n\n    const lineGenerator = line()\n      .x(d =>  xScale(d.dayCount))\n      .y(d =>  yScale(d[`${caseType}`]))\n      .curve(curveMonotoneX);\n\n    const xAxis = (g) => {\n        g.attr(\"transform\", `translate(0,${height - margin.bottom})`)\n        .call(axisBottom(xScale)\n        .tickValues(xScale.domain().filter(function(d,i){ return !(((i+1)%10))})))\n\n\n        .call(g => g.append(\"text\")\n            .attr(\"x\", -margin.left)\n            .attr(\"y\", 10)\n            .attr(\"fill\", \"currentColor\")\n            .attr(\"text-anchor\", \"start\")\n            .text(dailyData.dayCount))\n    }\n\n    const yAxis = (g) => {\n        g.attr(\"transform\", `translate(${margin.left},0)`)\n        .call(axisLeft(yScale).ticks(null, dailyData.format).tickSize(-innerWidth))\n            \n            .call(g => g.select(\".domain\").remove())\n\n        .call(g => g.append(\"text\")\n            .attr(\"x\", -margin.left)\n            .attr(\"y\", 10)\n            .attr(\"fill\", \"currentColor\")\n            .attr(\"text-anchor\", \"start\")\n            .text(dailyData.total))\n    }\n\n\n    // setting up tooltip with data labels\n    // const tip = d3Tip()\n    //     .attr('class', 'd3-tip')\n    //     .offset([-10, 0])\n    //     .html(function(d) {\n    //         return \"<p>\" + \"<span style='color:white'>\" + \"Day \" + d.dayCount.toLocaleString('en') + \"<br/>\" +\n    //             d.date.toLocaleDateString() + \"<br/>\" + \"</span>\" +\n    //             \"<span style='color:#BD2D28'>\" + d.total.toLocaleString('en') + \" Total\" + \"<br/>\" + \"</span>\" +\n    //             \"<span style='color:#E3BA22'>\" + d.active.toLocaleString('en') + \" Active\" + \"<br/>\" + \"</span>\" +\n    //             \"<span style='color:#A0B700'>\" + d.recovered.toLocaleString('en') + \" Recovered\" + \"<br/>\" + \"</span>\" +\n    //             \"<span style='color:#BA5F06'>\" + d.deaths.toLocaleString('en') + \" Deaths\" + \"</p>\" \n    //     })\n        \n\n\n\n\n    \n\n\n\n    // setting up svg element on card\n    const svg = select(`.${vizName}`)\n        .append(\"svg\")\n        .attr(\"preserveAspectRatio\", \"xMinYMid meet\")\n        .attr(\"viewBox\", [0, 0, width, height])\n\n    // const g = svg.append(\"g\")\n    //     .attr(\"fill\", color(caseType))\n    //     .selectAll('rect')\n    //     .data(dailyData)\n    //     .join(\"rect\")\n    //     .attr('x', d => xScale(d.dayCount))\n\n    //     .attr(\"y\", d => yScale(d[`${caseType}`]))\n    //     .attr(\"width\", xScale.bandwidth())\n    //     .attr(\"height\", d => yScale(0) - yScale(d[`${caseType}`]))\n    //     .attr(\"class\", \"bar\")\n    //     .on('mouseover', tip.show)\n    //     .on('mouseout', tip.hide)\n\n    \n\n    const g = svg.append('path')\n        .attr(\"fill\", \"none\")\n        .datum(dailyData)\n        // .attr('x', d => xScale(d.dayCount))\n\n        .attr('stroke', color(caseType))\n        .attr('stroke-width', 2)\n        .attr('class', 'line') \n        .attr('d', lineGenerator)\n        // .on('mouseover', tip.show)\n        // .on('mouseout', tip.hide)\n        // .attr(\"y\", d => yScale(d[`${caseType}`]))\n        // .attr(\"width\", xScale.bandwidth())\n        // .attr(\"height\", d => yScale(0) - yScale(d[`${caseType}`]))\n\n    // const s = svg.append('path')\n    //     .attr(\"fill\", \"none\")\n    //     .datum(dailyData)\n    //     // .attr('x', d => xScale(d.dayCount))\n\n    //     .attr('stroke', color(caseType))\n    //     .attr('stroke-width', 2)\n    //     .attr('class', 'line') \n    //     .attr('d', lineGenerator)\n\n\n    const xAxisG = svg.append('g')\n        .call(xAxis)\n        \n    xAxisG.select('.domain').remove();\n    \n    xAxisG.append('text')\n        .attr('class', 'axis-label')\n        .attr('y', 45)\n        .attr('x', innerWidth / 2)\n        .attr('fill', 'black')\n        .text(xAxisLabel)\n\n\n\n\n\n\n\n    const yAxisG = svg.append('g')\n        .call(yAxis)\n        \n    yAxisG.select('.domain').remove();\n    \n    yAxisG.append('text')\n        .attr('class', 'axis-label')\n        .attr('y', -60)\n        .attr('x', -height / 2)\n        .attr('fill', 'black')\n        .attr('transform', `rotate(-90)`)\n        .attr('text-anchor', 'middle')\n        .text(yAxisLabel);\n\n\n\n    const titleG = svg.append(\"g\")\n\n    titleG.append('text')\n        .attr('class', 'title')\n        .attr('x', width / 2)\n        .attr('y', 40)\n        .attr('text-anchor', 'middle')\n        .text(title);\n\n    titleG.append('text')\n        .attr('class', 'subtitle')\n        .attr('x', width / 2)\n        .attr('y', 70)\n        .attr('text-anchor', 'middle')\n        .text(subtitle());\n\n    // svg.call(tip);\n\n}\n\n\n\n\nexport default DrawBar","/Users/Ginny 1/Desktop/SSUI-FINAL/src/d3/DrawLine.js",["181","182","183","184","185","186"],"import { max, scaleBand, scaleLinear, axisBottom, axisLeft, select } from 'd3';\nimport { line, curveMonotoneX } from 'd3-shape';\nimport { color } from './Color'\nimport \"./DrawLine.css\"\n\n\n\n\nconst DrawLine = (names, data, slugs, caseType) => {\n    console.log(names)\n    console.log(data)\n    console.log(slugs)\n    caseType ? caseType = caseType : caseType = \"total\";\n    const width = 960\n    const height = 500\n    const padding = .2\n    const margin = ({top: 80, right: 100, bottom: 80, left: 80})\n    const innerWidth = width - margin.left - margin.right;\n    const vizName = \"viz\"\n\n\n    function capFirst(string) {\n        return string.charAt(0).toUpperCase() + string.slice(1);\n    }\n\n    const xAxisLabel = \"Number of Days\"\n    const yAxisLabel = caseType ? `Number of Cases: ${capFirst(caseType)}` : \"Number of Cases\"\n    let title = \"\"\n    if (caseType===\"deaths\") {\n        title = \"COVID-19 deaths\"\n    }\n    else if (caseType === \"daily_deaths\") {\n        title = \"COVID-19 daily deaths\"\n        \n    }\n    else {\n        title = `COVID-19 ${caseType} cases`\n    }\n\n\n    let l =[] \n    data.map((d,idx) => {\n        l.push(d.length)\n    })\n\n    const i = l.indexOf(Math.max.apply(Math, l))\n    // console.log(l)\n    // console.log(i)\n\n    console.log(data[i])\n\n    const xScale = scaleBand()\n        .domain(data[i].map(d => d.dayCount))\n        .range([margin.left, width - margin.right])\n        .padding(padding)\n    \n    let first = data[i][0].date\n    console.log(first.toLocaleDateString())\n    \n    const subtitle = `Since ${first.toLocaleDateString()}`\n    \n    let l2 = []\n    let m = 0\n    data.map((dat,idx) =>  {\n        m = max(dat, d => d[`${caseType}`])\n        l2.push(m)\n    })\n    console.log(l2)\n    const largest = Math.max.apply(Math, l2)\n    console.log(largest)\n\n\n    const yScale = scaleLinear()\n        .domain([0, largest])\n        .range([height - margin.bottom, margin.top])\n\n\n    const svg = select(`.${vizName}`)\n    .append(\"svg\")\n    .attr(\"preserveAspectRatio\", \"xMinYMid meet\")\n    .attr(\"viewBox\", [0, 0, width, height])\n\n    data.map((dat, idx) => {\n        console.log(dat[dat.length-1])\n        console.log(dat[dat.length-1][caseType])\n        const lineGenerator = line()\n        .x(d =>  xScale(d.dayCount))\n        .y(d =>  yScale(d[`${caseType}`]))\n        .curve(curveMonotoneX);\n\n        const s = svg.append('path')\n        .attr(\"fill\", \"none\")\n        .datum(dat)\n        // .attr('stroke', `#${((1<<24)*Math.random()|0).toString(16)}`)\n        .attr('stroke', color(caseType))\n\n        .attr(\"class\", `line country${(idx + 1).toString()}`)\n        .attr('stroke-width', 2)\n        .attr('class', 'line') \n        .attr('d', lineGenerator)\n\n        const t = svg.append('text')\n        .text(names[idx])\n        .attr(\"dy\", \".35em\")\n        .attr(\"text-anchor\", \"start\")\n        .attr(\"transform\", `translate(${width - 90}, ${yScale(dat[dat.length-1][caseType])+10})`)\n\n\n\n\n\n\n    })\n\n    const xAxis = (g) => {\n        g.attr(\"transform\", `translate(0,${height - margin.bottom})`)\n        .call(axisBottom(xScale)\n        .tickValues(xScale.domain().filter(function(d,i){ return !(((i+1)%10))})))\n\n\n        .call(g => g.append(\"text\")\n            .attr(\"x\", -margin.left)\n            .attr(\"y\", 10)\n            .attr(\"fill\", \"currentColor\")\n            .attr(\"text-anchor\", \"start\")\n            .text(data[i].dayCount))\n    }\n\n\n    const xAxisG = svg.append('g')\n        .call(xAxis)\n        \n    xAxisG.select('.domain').remove();\n    \n    xAxisG.append('text')\n        .attr('class', 'axis-label')\n        .attr('y', 45)\n        .attr('x', innerWidth / 2)\n        .attr('fill', 'black')\n        .text(xAxisLabel)\n\n\n    const yAxis = (g) => {\n        g.attr(\"transform\", `translate(${margin.left},0)`)\n        .call(axisLeft(yScale).ticks(null, data[i].format).tickSize(-innerWidth))\n            \n            .call(g => g.select(\".domain\").remove())\n\n        .call(g => g.append(\"text\")\n            .attr(\"x\", -margin.left)\n            .attr(\"y\", 10)\n            .attr(\"fill\", \"currentColor\")\n            .attr(\"text-anchor\", \"start\")\n            .text(data[i].total))\n    }\n\n\n    const yAxisG = svg.append('g')\n    .call(yAxis)\n    \n    yAxisG.select('.domain').remove();\n\n    yAxisG.append('text')\n        .attr('class', 'axis-label')\n        .attr('y', -60)\n        .attr('x', -height / 2)\n        .attr('fill', 'black')\n        .attr('transform', `rotate(-90)`)\n        .attr('text-anchor', 'middle')\n        .text(yAxisLabel);\n\n\n\n    const titleG = svg.append(\"g\")\n\n    titleG.append('text')\n        .attr('class', 'title')\n        .attr('x', width / 2)\n        .attr('y', 40)\n        .attr('text-anchor', 'middle')\n        .text(title);\n    \n    titleG.append('text')\n        .attr('class', 'subtitle')\n        .attr('x', width / 2)\n        .attr('y', 70)\n        .attr('text-anchor', 'middle')\n        .text(subtitle);\n\n\n\n\n\n}\n\n\nexport default DrawLine","/Users/Ginny 1/Desktop/SSUI-FINAL/src/d3/Color.js",[],["187","188"],"/Users/Ginny 1/Desktop/SSUI-FINAL/src/containers/Simulation.js",[],"/Users/Ginny 1/Desktop/SSUI-FINAL/src/containers/config.js",[],"/Users/Ginny 1/Desktop/SSUI-FINAL/src/containers/airport.js",[],"/Users/Ginny 1/Desktop/SSUI-FINAL/src/containers/linedata.js",[],{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","severity":1,"message":"194","line":26,"column":8,"nodeType":"195","endLine":26,"endColumn":10,"suggestions":"196"},{"ruleId":"197","severity":1,"message":"198","line":2,"column":8,"nodeType":"199","messageId":"200","endLine":2,"endColumn":12},{"ruleId":"197","severity":1,"message":"201","line":4,"column":27,"nodeType":"199","messageId":"200","endLine":4,"endColumn":36},{"ruleId":"197","severity":1,"message":"202","line":5,"column":23,"nodeType":"199","messageId":"200","endLine":5,"endColumn":34},{"ruleId":"197","severity":1,"message":"203","line":7,"column":8,"nodeType":"199","messageId":"200","endLine":7,"endColumn":16},{"ruleId":"197","severity":1,"message":"204","line":8,"column":8,"nodeType":"199","messageId":"200","endLine":8,"endColumn":13},{"ruleId":"205","severity":1,"message":"206","line":47,"column":87,"nodeType":"207","messageId":"208","endLine":47,"endColumn":88},{"ruleId":"205","severity":1,"message":"206","line":48,"column":87,"nodeType":"207","messageId":"208","endLine":48,"endColumn":88},{"ruleId":"205","severity":1,"message":"206","line":49,"column":87,"nodeType":"207","messageId":"208","endLine":49,"endColumn":88},{"ruleId":"205","severity":1,"message":"206","line":50,"column":87,"nodeType":"207","messageId":"208","endLine":50,"endColumn":88},{"ruleId":"205","severity":1,"message":"206","line":51,"column":87,"nodeType":"207","messageId":"208","endLine":51,"endColumn":88},{"ruleId":"205","severity":1,"message":"206","line":52,"column":87,"nodeType":"207","messageId":"208","endLine":52,"endColumn":88},{"ruleId":"205","severity":1,"message":"206","line":19,"column":97,"nodeType":"207","messageId":"208","endLine":19,"endColumn":98},{"ruleId":"205","severity":1,"message":"206","line":20,"column":87,"nodeType":"207","messageId":"208","endLine":20,"endColumn":88},{"ruleId":"205","severity":1,"message":"206","line":21,"column":87,"nodeType":"207","messageId":"208","endLine":21,"endColumn":88},{"ruleId":"205","severity":1,"message":"206","line":22,"column":87,"nodeType":"207","messageId":"208","endLine":22,"endColumn":88},{"ruleId":"205","severity":1,"message":"206","line":23,"column":87,"nodeType":"207","messageId":"208","endLine":23,"endColumn":88},{"ruleId":"205","severity":1,"message":"206","line":24,"column":87,"nodeType":"207","messageId":"208","endLine":24,"endColumn":88},{"ruleId":"205","severity":1,"message":"206","line":19,"column":97,"nodeType":"207","messageId":"208","endLine":19,"endColumn":98},{"ruleId":"205","severity":1,"message":"206","line":20,"column":87,"nodeType":"207","messageId":"208","endLine":20,"endColumn":88},{"ruleId":"205","severity":1,"message":"206","line":21,"column":87,"nodeType":"207","messageId":"208","endLine":21,"endColumn":88},{"ruleId":"205","severity":1,"message":"206","line":22,"column":87,"nodeType":"207","messageId":"208","endLine":22,"endColumn":88},{"ruleId":"205","severity":1,"message":"206","line":23,"column":87,"nodeType":"207","messageId":"208","endLine":23,"endColumn":88},{"ruleId":"205","severity":1,"message":"206","line":24,"column":87,"nodeType":"207","messageId":"208","endLine":24,"endColumn":88},{"ruleId":"197","severity":1,"message":"209","line":6,"column":8,"nodeType":"199","messageId":"200","endLine":6,"endColumn":14},{"ruleId":"210","severity":1,"message":"211","line":81,"column":33,"nodeType":"212","endLine":84,"endColumn":41},{"ruleId":"197","severity":1,"message":"213","line":3,"column":10,"nodeType":"199","messageId":"200","endLine":3,"endColumn":21},{"ruleId":"197","severity":1,"message":"214","line":4,"column":10,"nodeType":"199","messageId":"200","endLine":4,"endColumn":17},{"ruleId":"215","severity":1,"message":"216","line":8,"column":27,"nodeType":"199","messageId":"217","endLine":8,"endColumn":35},{"ruleId":"218","severity":1,"message":"219","line":18,"column":23,"nodeType":"220","messageId":"221","endLine":18,"endColumn":24,"suggestions":"222"},{"ruleId":"218","severity":1,"message":"219","line":19,"column":19,"nodeType":"220","messageId":"221","endLine":19,"endColumn":20,"suggestions":"223"},{"ruleId":"218","severity":1,"message":"219","line":19,"column":21,"nodeType":"220","messageId":"221","endLine":19,"endColumn":22,"suggestions":"224"},{"ruleId":"215","severity":1,"message":"225","line":5,"column":21,"nodeType":"199","messageId":"217","endLine":5,"endColumn":26},{"ruleId":"218","severity":1,"message":"219","line":13,"column":23,"nodeType":"220","messageId":"221","endLine":13,"endColumn":24,"suggestions":"226"},{"ruleId":"218","severity":1,"message":"219","line":14,"column":19,"nodeType":"220","messageId":"221","endLine":14,"endColumn":20,"suggestions":"227"},{"ruleId":"218","severity":1,"message":"219","line":14,"column":21,"nodeType":"220","messageId":"221","endLine":14,"endColumn":22,"suggestions":"228"},{"ruleId":"197","severity":1,"message":"214","line":4,"column":10,"nodeType":"199","messageId":"200","endLine":4,"endColumn":17},{"ruleId":"229","severity":1,"message":"230","line":13,"column":34,"nodeType":"231","messageId":"232","endLine":13,"endColumn":36},{"ruleId":"193","severity":1,"message":"233","line":9,"column":8,"nodeType":"195","endLine":9,"endColumn":18,"suggestions":"234"},{"ruleId":"193","severity":1,"message":"235","line":9,"column":8,"nodeType":"195","endLine":9,"endColumn":18,"suggestions":"236"},{"ruleId":"197","severity":1,"message":"237","line":4,"column":8,"nodeType":"199","messageId":"200","endLine":4,"endColumn":13},{"ruleId":"215","severity":1,"message":"238","line":10,"column":27,"nodeType":"199","messageId":"217","endLine":10,"endColumn":35},{"ruleId":"197","severity":1,"message":"239","line":124,"column":11,"nodeType":"199","messageId":"200","endLine":124,"endColumn":12},{"ruleId":"215","severity":1,"message":"238","line":13,"column":27,"nodeType":"199","messageId":"217","endLine":13,"endColumn":35},{"ruleId":"229","severity":1,"message":"230","line":42,"column":22,"nodeType":"231","messageId":"232","endLine":42,"endColumn":24},{"ruleId":"229","severity":1,"message":"230","line":64,"column":24,"nodeType":"231","messageId":"232","endLine":64,"endColumn":26},{"ruleId":"229","severity":1,"message":"230","line":83,"column":25,"nodeType":"231","messageId":"232","endLine":83,"endColumn":27},{"ruleId":"197","severity":1,"message":"240","line":91,"column":15,"nodeType":"199","messageId":"200","endLine":91,"endColumn":16},{"ruleId":"197","severity":1,"message":"241","line":102,"column":15,"nodeType":"199","messageId":"200","endLine":102,"endColumn":16},{"ruleId":"189","replacedBy":"242"},{"ruleId":"191","replacedBy":"243"},"no-native-reassign",["244"],"no-negated-in-lhs",["245"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["246"],"no-unused-vars","'data' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useDispatch' is defined but never used.","'Province' is defined but never used.","'State' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'Delete' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useSelector' is defined but never used.","'NavLink' is defined but never used.","no-self-assign","'province' is assigned to itself.","selfAssignment","no-useless-escape","Unnecessary escape character: \\-.","Literal","unnecessaryEscape",["247","248"],["249","250"],["251","252"],"'state' is assigned to itself.",["253","254"],["255","256"],["257","258"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'data', 'names', and 'slugs'. Either include them or remove the dependency array.",["259"],"React Hook useEffect has missing dependencies: 'countryName', 'dailyData', 'slug', and 'totalCases'. Either include them or remove the dependency array.",["260"],"'d3Tip' is defined but never used.","'caseType' is assigned to itself.","'g' is assigned a value but never used.","'s' is assigned a value but never used.","'t' is assigned a value but never used.",["244"],["245"],"no-global-assign","no-unsafe-negation",{"desc":"261","fix":"262"},{"messageId":"263","fix":"264","desc":"265"},{"messageId":"266","fix":"267","desc":"268"},{"messageId":"263","fix":"269","desc":"265"},{"messageId":"266","fix":"270","desc":"268"},{"messageId":"263","fix":"271","desc":"265"},{"messageId":"266","fix":"272","desc":"268"},{"messageId":"263","fix":"273","desc":"265"},{"messageId":"266","fix":"274","desc":"268"},{"messageId":"263","fix":"275","desc":"265"},{"messageId":"266","fix":"276","desc":"268"},{"messageId":"263","fix":"277","desc":"265"},{"messageId":"266","fix":"278","desc":"268"},{"desc":"279","fix":"280"},{"desc":"281","fix":"282"},"Update the dependencies array to be: [dispatch]",{"range":"283","text":"284"},"removeEscape",{"range":"285","text":"286"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"287","text":"288"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"289","text":"286"},{"range":"290","text":"288"},{"range":"291","text":"286"},{"range":"292","text":"288"},{"range":"293","text":"286"},{"range":"294","text":"288"},{"range":"295","text":"286"},{"range":"296","text":"288"},{"range":"297","text":"286"},{"range":"298","text":"288"},"Update the dependencies array to be: [caseType, data, names, slugs]",{"range":"299","text":"300"},"Update the dependencies array to be: [caseType, countryName, dailyData, slug, totalCases]",{"range":"301","text":"302"},[951,953],"[dispatch]",[638,639],"",[638,638],"\\",[668,669],[668,668],[670,671],[670,670],[330,331],[330,330],[360,361],[360,360],[362,363],[362,362],[210,220],"[caseType, data, names, slugs]",[248,258],"[caseType, countryName, dailyData, slug, totalCases]"]