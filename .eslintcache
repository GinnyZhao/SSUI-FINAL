[{"/Users/Ginny 1/Desktop/SSUI-FINAL/src/index.js":"1","/Users/Ginny 1/Desktop/SSUI-FINAL/src/App.js":"2","/Users/Ginny 1/Desktop/SSUI-FINAL/src/reducers/rootReducer.js":"3","/Users/Ginny 1/Desktop/SSUI-FINAL/src/reducers/countriesReducer.js":"4","/Users/Ginny 1/Desktop/SSUI-FINAL/src/reducers/collectionReducer.js":"5","/Users/Ginny 1/Desktop/SSUI-FINAL/src/reducers/countryDataReducer.js":"6","/Users/Ginny 1/Desktop/SSUI-FINAL/src/reducers/cacheReducer.js":"7","/Users/Ginny 1/Desktop/SSUI-FINAL/src/components/NavBar.js":"8","/Users/Ginny 1/Desktop/SSUI-FINAL/src/containers/New.js":"9","/Users/Ginny 1/Desktop/SSUI-FINAL/src/components/Footer.js":"10","/Users/Ginny 1/Desktop/SSUI-FINAL/src/containers/Show.js":"11","/Users/Ginny 1/Desktop/SSUI-FINAL/src/containers/Collection.js":"12","/Users/Ginny 1/Desktop/SSUI-FINAL/src/containers/Home.js":"13","/Users/Ginny 1/Desktop/SSUI-FINAL/src/containers/Overlay.js":"14","/Users/Ginny 1/Desktop/SSUI-FINAL/src/components/Loader.js":"15","/Users/Ginny 1/Desktop/SSUI-FINAL/src/components/CountryDropdown.js":"16","/Users/Ginny 1/Desktop/SSUI-FINAL/src/components/Country.js":"17","/Users/Ginny 1/Desktop/SSUI-FINAL/src/components/Instructions.js":"18","/Users/Ginny 1/Desktop/SSUI-FINAL/src/components/Countries.js":"19","/Users/Ginny 1/Desktop/SSUI-FINAL/src/d3/Visual.js":"20","/Users/Ginny 1/Desktop/SSUI-FINAL/src/d3/Viz.js":"21","/Users/Ginny 1/Desktop/SSUI-FINAL/src/d3/DrawBar.js":"22","/Users/Ginny 1/Desktop/SSUI-FINAL/src/d3/DrawLine.js":"23","/Users/Ginny 1/Desktop/SSUI-FINAL/src/d3/Color.js":"24"},{"size":717,"mtime":1606810448934,"results":"25","hashOfConfig":"26"},{"size":1144,"mtime":1607955512905,"results":"27","hashOfConfig":"26"},{"size":627,"mtime":1607260243700,"results":"28","hashOfConfig":"26"},{"size":207,"mtime":1606810448936,"results":"29","hashOfConfig":"26"},{"size":226,"mtime":1606810448936,"results":"30","hashOfConfig":"26"},{"size":219,"mtime":1606810448936,"results":"31","hashOfConfig":"26"},{"size":467,"mtime":1606810448935,"results":"32","hashOfConfig":"26"},{"size":1808,"mtime":1607956098044,"results":"33","hashOfConfig":"26"},{"size":1183,"mtime":1606908395428,"results":"34","hashOfConfig":"26"},{"size":735,"mtime":1606987450585,"results":"35","hashOfConfig":"26"},{"size":2593,"mtime":1607955699280,"results":"36","hashOfConfig":"26"},{"size":2625,"mtime":1607955286454,"results":"37","hashOfConfig":"26"},{"size":4172,"mtime":1607622235676,"results":"38","hashOfConfig":"26"},{"size":2745,"mtime":1607324788808,"results":"39","hashOfConfig":"26"},{"size":154,"mtime":1606810448379,"results":"40","hashOfConfig":"26"},{"size":3873,"mtime":1608012321559,"results":"41","hashOfConfig":"26"},{"size":1935,"mtime":1608012422576,"results":"42","hashOfConfig":"26"},{"size":871,"mtime":1607519259898,"results":"43","hashOfConfig":"26"},{"size":1745,"mtime":1607955561645,"results":"44","hashOfConfig":"26"},{"size":303,"mtime":1608012732007,"results":"45","hashOfConfig":"26"},{"size":347,"mtime":1606810448933,"results":"46","hashOfConfig":"26"},{"size":4977,"mtime":1608020145690,"results":"47","hashOfConfig":"26"},{"size":4842,"mtime":1608016564349,"results":"48","hashOfConfig":"26"},{"size":435,"mtime":1607309523358,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"58z1tg",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"52"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"/Users/Ginny 1/Desktop/SSUI-FINAL/src/index.js",[],["108","109"],"/Users/Ginny 1/Desktop/SSUI-FINAL/src/App.js",[],"/Users/Ginny 1/Desktop/SSUI-FINAL/src/reducers/rootReducer.js",[],"/Users/Ginny 1/Desktop/SSUI-FINAL/src/reducers/countriesReducer.js",[],"/Users/Ginny 1/Desktop/SSUI-FINAL/src/reducers/collectionReducer.js",[],"/Users/Ginny 1/Desktop/SSUI-FINAL/src/reducers/countryDataReducer.js",[],"/Users/Ginny 1/Desktop/SSUI-FINAL/src/reducers/cacheReducer.js",[],"/Users/Ginny 1/Desktop/SSUI-FINAL/src/components/NavBar.js",[],"/Users/Ginny 1/Desktop/SSUI-FINAL/src/containers/New.js",["110"],"import React, { useState, useEffect } from 'react';\nimport CountryDropdown from '../components/CountryDropdown'\nimport { Loader } from '../components/Loader'\nimport { useDispatch } from \"react-redux\";\nimport { Instructions } from '../components/Instructions';\n\nconst New = () => {\n    const [isLoading, setIsLoading] = useState(false);\n    const dispatch = useDispatch()\n\n    // fetch basic country data including name, slug and code from Coronavirus COVID19 API\n    useEffect( () => {\n        async function fetchData() {\n            setIsLoading(true);\n\n            var requestOptions = {\n                method: 'GET',\n                redirect: 'follow'\n              };\n            const response = await fetch(\"https://api.covid19api.com/countries\", requestOptions)\n            const data = await response.json()\n            dispatch({ type: 'addCountries', payload: data })\n            setIsLoading(false);\n        }\n        fetchData();\n    }, []); \n\n    return (\n\n        <div>\n            <Instructions />\n\n            {isLoading ? (\n                < Loader />\n            ) : (\n                < CountryDropdown />\n            )}\n        </div>\n    )\n}\n\nexport default New","/Users/Ginny 1/Desktop/SSUI-FINAL/src/components/Footer.js",[],"/Users/Ginny 1/Desktop/SSUI-FINAL/src/containers/Show.js",["111","112","113","114","115","116","117","118"],"import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport Country from '../components/Country'\n\nimport { Card } from 'react-bootstrap'\nimport { Col } from 'react-bootstrap'\nimport { Row } from 'react-bootstrap'\n\nimport { selectAll } from 'd3'\nimport { NavLink } from 'react-router-dom';\n\n\n\nconst Show = (props) => {\n\n    const name = props.location.countryName;\n\n\n    const countryData = useSelector(state => state.countryData)\n\n\n    let index = countryData.findIndex(obj => Object.keys(obj)[0] === name);\n    console.log(index);\n\n    const [caseType, setCaseType] = useState(\"\");\n        return (\n            <div>\n                <Row >\n                    <Col xs=\"12\" sm=\"6\" md=\"4\" lg=\"3\" xl=\"3\">\n                        <div className=\"card button-col\">\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"cases block\" value=\"total\">Total Cases</button>\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"deathsPerOneMillion block\" value=\"deaths\">Deaths</button>\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"activee block\" value=\"active\"> Active Cases</button>\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"recovered block\" value=\"recovered\">Recovered Cases</button>\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"daily block\" value=\"daily\"> Daily Confirmed Cases </button>\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"daily_deaths block\" value=\"daily_deaths\"> Daily Deaths </button>\n                        </div>\n                        <NavLink to='/collection'>\n                            <button className=\"dark\" style={{\"font-size\": \"16px\"}}> Back to side-by-side View </button>\n                        </NavLink>\n                    </Col>\n\n                    <Col sm=\"12\" md=\"9\" lg=\"9\" xl=\"9\">\n                        <Card>\n                            <NavLink to='/collection'>\n                                <Country caseType={caseType} country={countryData[index]}/>\n                            </NavLink>\n                        </Card>\n                    </Col>\n                </Row>\n            </div>\n        )\n\n}\n\nexport default Show","/Users/Ginny 1/Desktop/SSUI-FINAL/src/containers/Collection.js",["119","120","121","122","123","124"],"import React, { useState } from 'react';\nimport { Redirect } from \"react-router\"\nimport Country from '../components/Country'\nimport { selectAll } from 'd3'\nimport { useSelector } from 'react-redux'\nimport { NavLink } from 'react-router-dom';\nimport \"./Collection.css\"\n\n\nconst Collection = () => {\n    const countryData = useSelector(state => state.countryData)\n    const [caseType, setCaseType] = useState(\"\");\n\n    if (countryData) {\n        return (\n            <div className=\"row\">\n                    <div className=\"col-sm-12 col-md-6 col-lg-3\">\n                        <div className='card button-col'>\n                            <button autofocus onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove(), event.preventDefault())} className=\"cases block\" value=\"total\">Total Cases</button>\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"deathsPerOneMillion block\" value=\"deaths\">Deaths</button>\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"activee block\" value=\"active\"> Active Cases</button>\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"recovered block\" value=\"recovered\">Recovered Cases</button>\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"daily block\" value=\"daily\"> Daily Confirmed Cases </button>\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"daily_deaths block\" value=\"daily_deaths\"> Daily Deaths </button>\n                        </div>\n                        <NavLink to='/new'>\n                            <button className=\"dark\"> Back to Main </button>\n                        </NavLink>\n                    </div>\n\n                    <div className=\"col-sm-12 col-md-6 col-lg-9\">\n                        <div className=\"countries\">\n                            {countryData.map((country, index) => { \n                                return (\n                                    <div className=\"country\">\n                                        <Country caseType={caseType} country={country}/>  \n                                    </div>\n                                )\n                            })}\n                        </div>\n                    </div>\n            </div>\n        )\n    } else {\n        return <Redirect to='/' />\n\n    }\n}\n\nexport default Collection\n","/Users/Ginny 1/Desktop/SSUI-FINAL/src/containers/Home.js",[],"/Users/Ginny 1/Desktop/SSUI-FINAL/src/containers/Overlay.js",["125","126","127","128","129","130"],"import React, { useState } from 'react';\nimport { Redirect } from \"react-router\"\nimport Countries from '../components/Countries'\nimport { selectAll } from 'd3'\nimport { useSelector } from 'react-redux'\nimport { NavLink } from 'react-router-dom';\n\n\nconst Overlay = () => {\n    const countryData = useSelector(state => state.countryData)\n    console.log(countryData)\n    const [caseType, setCaseType] = useState(\"\");\n\n    if (countryData) {\n        return (\n            <div className=\"row\">\n                    <div className=\"col-sm-12 col-md-6 col-lg-3\">\n                        <div className='card button-col'>\n                            <button autofocus onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"cases block\" value=\"total\">Total Cases</button>\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"deathsPerOneMillion block\" value=\"deaths\">Deaths</button>\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"activee block\" value=\"active\"> Active Cases</button>\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"recovered block\" value=\"recovered\">Recovered Cases</button>\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"daily block\" value=\"daily\"> Daily Confirmed Cases </button>\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"daily_deaths block\" value=\"daily_deaths\"> Daily Deaths </button>\n                        </div>\n                        <NavLink to='/new'>\n                            <button className=\"dark\"> Back to Main </button>\n                        </NavLink>\n                    </div>\n\n                    <div className=\"col-sm-12 col-md-6 col-lg-9\">\n                        <Countries caseType={caseType} countries={countryData}/>  \n                            {/* {countryData.map((country, index) => { \n                                return (\n                                    <div className=\"country\">\n                                            <Countries caseType={caseType} countries={countryData}/>  \n                                    </div>\n                                )\n                            })} */}\n                    </div>\n            </div>\n        )\n    } else {\n        return <Redirect to='/' />\n        // return <Redirect to={process.env.PUBLIC_URL} />\n        // return <h3>Use the Buttons Above to Get Started</h3>\n\n    }\n}\n\nexport default Overlay\n","/Users/Ginny 1/Desktop/SSUI-FINAL/src/components/Loader.js",[],"/Users/Ginny 1/Desktop/SSUI-FINAL/src/components/CountryDropdown.js",["131"],"import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { NavLink } from 'react-router-dom';\nimport \"./CountryDropdown.css\";\n\nconst CountryDropdown = (props) => {\n\n    const countries = useSelector(state => state.countries)\n    const collection = useSelector(state => state.collection)\n    const dispatch = useDispatch()\n    let display = true;\n\n\n// Fetch specific country covid data based on user's choice in the select option\n    const fetchCountry = (event) => {\n        const [slug, country, ISO2] = event.target.value.split(\",\") \n\n        async function fetchData() {\n\n            const requestOptions = {\n                method: 'GET',\n                redirect: 'follow'\n            };\n            \n            const response = await fetch(`https://api.covid19api.com/total/country/` + slug, requestOptions)\n\n            const data = await response.json()\n            const parsedData = data.filter(day => day.Confirmed > 0)\n\n            dispatch( { type: 'addCountryData', payload: { [country]: parsedData }} )\n            dispatch( { type: 'addCountryToCollection', payload: {slug, country, ISO2}} )\n        }\n        fetchData();\n    }\n\n    const invalid = () => collection.length === 0\n\n    return (\n        <div className=\"row\">\n            <div className=\"col-sm-12 col-md-6 col-lg-3\">\n\n                <h6 className=\"instruction\"> Select country to display: </h6>\n\n                <select class=\"dropdown\" onChange={event => fetchCountry(event)}>\n                \n                    <option placeholder=\"Countries\"> Countries </option>\n                    {countries.sort((a, b) => (a.Country > b.Country) ? 1 : -1).map(country => (\n                        <option\n                            id={country.Slug}\n                            key={country.Slug}\n                            value={[country.Slug, country.Country, country.ISO2]}\n                        >\n                        {country.Country}\n                        </option> \n                    ))}\n                </select>\n\n                <NavLink to='/collection'>\n                    <button className=\"dark\" disabled={invalid()}>View side-by-side plot</button>\n                </NavLink>\n                \n                <NavLink to=\"/overlay\">\n                    <button className=\"dark\" disabled={invalid()}> View overlay plot </button>\n                </NavLink>\n                {/* <button className=\"dark\" disabled={invalid()} onClick={() => {display = false}}> Reset </button> */}\n            </div>\n\n            <div className=\"col-sm-12 col-md-6 col-lg-9\">\n                <div className=\"countries\">\n                {collection.map( (country, index) => {\n                    const flagUrl = `https://disease.sh/assets/img/flags/${country.ISO2.toLowerCase()}.png`\n                    // const flagUrl = `https://www.countryflags.io/${country.ISO2.toLowerCase()}/flat/64.png`\n                    // const flagUrl = `https://flagcdn.com/256x192/${country.ISO2.toLowerCase()}.png`\n                    const worldUrl = `https://freesvg.org/img/Globe-Icon-Umber.png`\n\n                    return (\n\n                            <div className={display ? \"country\" : \"none\"}>\n                                <img className=\"flag\" key={country.slug} src={flagUrl} onError={(e)=>{ \n                                    if (e.target.src !== worldUrl) {\n                                        e.target.src=worldUrl;}\n                                    }}/>\n                                <h5 className=\"countryName\">{country.country}</h5>\n                                {/* <button className=\"delete\" onClick={() => {collection.splice(index, 1)}}> Delete </button> */}\n                            </div>\n                    )\n                })}\n                </div>\n            </div>\n\n            </div>\n\n    )\n}\n\nexport default CountryDropdown\n\n\n","/Users/Ginny 1/Desktop/SSUI-FINAL/src/components/Country.js",[],"/Users/Ginny 1/Desktop/SSUI-FINAL/src/components/Instructions.js",[],"/Users/Ginny 1/Desktop/SSUI-FINAL/src/components/Countries.js",["132"],"import React from 'react';\nimport Visual from '../d3/Visual'\nimport { useSelector } from 'react-redux'\n\nconst Countries = ({caseType, countries}) => {\n    const collection = useSelector(state => state.collection)\n    const res =  []\n    const slug_res = []\n    const names = []\n\n\n    countries.map((country, idx) => {\n        const countryName = Object.keys(country)[0]\n        const dailyData = country[countryName]       \n        const slug = collection.find(obj => obj.country === countryName).slug\n\n        const array = []\n        const parseData = (data, array) => {\n            data.forEach( (day, index) => {\n                let newCases = 0;\n                let newDeaths = 0;\n                if (index === 0) {\n                    newCases = 0;\n                    newDeaths = 0;\n                } else {\n                    newCases = day.Confirmed - data[index-1].Confirmed;\n                    newDeaths = day.Deaths - data[index-1].Deaths;\n\n                }\n                array.push({\n                    dayCount: index + 1,\n                    date: new Date(day.Date),\n                    total: day.Confirmed, \n                    active: day.Active, \n                    recovered: day.Recovered, \n                    deaths: day.Deaths,\n                    daily: newCases,\n                    daily_deaths: newDeaths,\n                })\n            })\n            console.log(array);\n            return array\n        }\n        res.push(parseData(dailyData, array));\n        slug_res.push(slug);\n        names.push(countryName);\n    })\n\n    console.log(res)\n    console.log(slug_res)\n\n    return (\n        <Visual names = {names} data = {res} caseType = {caseType} slugs = {slug_res}/>\n    )\n\n}\n\nexport default Countries\n\n","/Users/Ginny 1/Desktop/SSUI-FINAL/src/d3/Visual.js",["133"],"import React, { useEffect } from 'react';\nimport DrawLine from './DrawLine'\n\nconst Visual = ( {names, data, caseType, slugs}) => {\n    useEffect( () => {\n        DrawLine(names, data, slugs, caseType)\n    }, [caseType])\n\n    return (\n        <div className={\"viz\"} ></div>\n    )\n}\n\nexport default Visual","/Users/Ginny 1/Desktop/SSUI-FINAL/src/d3/Viz.js",["134"],"import React, { useEffect } from 'react';\nimport DrawBar from './DrawBar'\n\nconst Viz = ( {caseType, countryName, totalCases, dailyData, slug}) => {\n\n    useEffect( () => {\n\n        DrawBar(countryName, totalCases, dailyData, slug, caseType)\n    }, [caseType])\n\n    return (\n        <div className={\"viz\" + slug} ></div>\n    )\n}\n\nexport default Viz","/Users/Ginny 1/Desktop/SSUI-FINAL/src/d3/DrawBar.js",["135","136"],"/Users/Ginny 1/Desktop/SSUI-FINAL/src/d3/DrawLine.js",["137","138","139","140","141","142"],"import { max, scaleBand, scaleLinear, axisBottom, axisLeft, select } from 'd3';\nimport { line, curveMonotoneX } from 'd3-shape';\nimport { color } from './Color'\nimport \"./DrawLine.css\"\n\n\nconst DrawLine = (names, data, slugs, caseType) => {\n    console.log(names)\n    console.log(data)\n    console.log(slugs)\n    caseType ? caseType = caseType : caseType = \"total\";\n    const width = 960\n    const height = 500\n    const padding = .2\n    const margin = ({top: 80, right: 100, bottom: 80, left: 80})\n    const innerWidth = width - margin.left - margin.right;\n    const vizName = \"viz\"\n\n\n    function capFirst(string) {\n        return string.charAt(0).toUpperCase() + string.slice(1);\n    }\n\n    const xAxisLabel = \"Number of Days\"\n    const yAxisLabel = caseType ? `Number of Cases: ${capFirst(caseType)}` : \"Number of Cases\"\n    let title = \"\"\n    if (caseType===\"deaths\") {\n        title = \"COVID-19 deaths\"\n    }\n    else if (caseType === \"daily_deaths\") {\n        title = \"COVID-19 daily deaths\"\n        \n    }\n    else {\n        title = `COVID-19 ${caseType} cases`\n    }\n\n\n    let l =[] \n    data.map((d,idx) => {\n        l.push(d.length)\n    })\n\n    const i = l.indexOf(Math.max.apply(Math, l))\n    // console.log(l)\n    // console.log(i)\n\n    console.log(data[i])\n\n    const xScale = scaleBand()\n        .domain(data[i].map(d => d.dayCount))\n        .range([margin.left, width - margin.right])\n        .padding(padding)\n    \n    let first = data[i][0].date\n    console.log(first.toLocaleDateString())\n    \n    const subtitle = `Since ${first.toLocaleDateString()}`\n    \n    let l2 = []\n    let m = 0\n    data.map((dat,idx) =>  {\n        m = max(dat, d => d[`${caseType}`])\n        l2.push(m)\n    })\n    console.log(l2)\n    const largest = Math.max.apply(Math, l2)\n    console.log(largest)\n\n\n    const yScale = scaleLinear()\n        .domain([0, largest])\n        .range([height - margin.bottom, margin.top])\n\n\n    const svg = select(`.${vizName}`)\n    .append(\"svg\")\n    .attr(\"preserveAspectRatio\", \"xMinYMid meet\")\n    .attr(\"viewBox\", [0, 0, width, height])\n\n    data.map((dat, idx) => {\n        console.log(dat[dat.length-1])\n        console.log(dat[dat.length-1][caseType])\n        const lineGenerator = line()\n        .x(d =>  xScale(d.dayCount))\n        .y(d =>  yScale(d[`${caseType}`]))\n        .curve(curveMonotoneX);\n\n        const s = svg.append('path')\n        .attr(\"fill\", \"none\")\n        .datum(dat)\n        .attr('stroke', color(caseType))\n\n        .attr(\"class\", `line country${(idx + 1).toString()}`)\n        .attr('stroke-width', 2)\n        .attr('class', 'line') \n        .attr('d', lineGenerator)\n\n        const t = svg.append('text')\n        .text(names[idx])\n        .attr(\"dy\", \".35em\")\n        .attr(\"text-anchor\", \"start\")\n        .attr(\"transform\", `translate(${width - 90}, ${yScale(dat[dat.length-1][caseType])+10})`)\n\n\n\n\n\n\n    })\n\n    const xAxis = (g) => {\n        g.attr(\"transform\", `translate(0,${height - margin.bottom})`)\n        .call(axisBottom(xScale)\n        .tickValues(xScale.domain().filter(function(d,i){ return !(((i+1)%10))})))\n\n\n        .call(g => g.append(\"text\")\n            .attr(\"x\", -margin.left)\n            .attr(\"y\", 10)\n            .attr(\"fill\", \"currentColor\")\n            .attr(\"text-anchor\", \"start\")\n            .text(data[i].dayCount))\n    }\n\n\n    const xAxisG = svg.append('g')\n        .call(xAxis)\n        \n    xAxisG.select('.domain').remove();\n    \n    xAxisG.append('text')\n        .attr('class', 'axis-label')\n        .attr('y', 45)\n        .attr('x', innerWidth / 2)\n        .attr('fill', 'black')\n        .text(xAxisLabel)\n\n\n    const yAxis = (g) => {\n        g.attr(\"transform\", `translate(${margin.left},0)`)\n        .call(axisLeft(yScale).ticks(null, data[i].format).tickSize(-innerWidth))\n            \n            .call(g => g.select(\".domain\").remove())\n\n        .call(g => g.append(\"text\")\n            .attr(\"x\", -margin.left)\n            .attr(\"y\", 10)\n            .attr(\"fill\", \"currentColor\")\n            .attr(\"text-anchor\", \"start\")\n            .text(data[i].total))\n    }\n\n\n    const yAxisG = svg.append('g')\n    .call(yAxis)\n    \n    yAxisG.select('.domain').remove();\n\n    yAxisG.append('text')\n        .attr('class', 'axis-label')\n        .attr('y', -60)\n        .attr('x', -height / 2)\n        .attr('fill', 'black')\n        .attr('transform', `rotate(-90)`)\n        .attr('text-anchor', 'middle')\n        .text(yAxisLabel);\n\n\n\n    const titleG = svg.append(\"g\")\n\n    titleG.append('text')\n        .attr('class', 'title')\n        .attr('x', width / 2)\n        .attr('y', 40)\n        .attr('text-anchor', 'middle')\n        .text(title);\n    \n    titleG.append('text')\n        .attr('class', 'subtitle')\n        .attr('x', width / 2)\n        .attr('y', 70)\n        .attr('text-anchor', 'middle')\n        .text(subtitle);\n\n\n\n\n\n}\n\n\nexport default DrawLine","/Users/Ginny 1/Desktop/SSUI-FINAL/src/d3/Color.js",[],{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","severity":1,"message":"148","line":26,"column":8,"nodeType":"149","endLine":26,"endColumn":10,"suggestions":"150"},{"ruleId":"151","severity":1,"message":"152","line":1,"column":27,"nodeType":"153","messageId":"154","endLine":1,"endColumn":36},{"ruleId":"151","severity":1,"message":"155","line":2,"column":23,"nodeType":"153","messageId":"154","endLine":2,"endColumn":34},{"ruleId":"156","severity":1,"message":"157","line":32,"column":87,"nodeType":"158","messageId":"159","endLine":32,"endColumn":88},{"ruleId":"156","severity":1,"message":"157","line":33,"column":87,"nodeType":"158","messageId":"159","endLine":33,"endColumn":88},{"ruleId":"156","severity":1,"message":"157","line":34,"column":87,"nodeType":"158","messageId":"159","endLine":34,"endColumn":88},{"ruleId":"156","severity":1,"message":"157","line":35,"column":87,"nodeType":"158","messageId":"159","endLine":35,"endColumn":88},{"ruleId":"156","severity":1,"message":"157","line":36,"column":87,"nodeType":"158","messageId":"159","endLine":36,"endColumn":88},{"ruleId":"156","severity":1,"message":"157","line":37,"column":87,"nodeType":"158","messageId":"159","endLine":37,"endColumn":88},{"ruleId":"156","severity":1,"message":"157","line":19,"column":97,"nodeType":"158","messageId":"159","endLine":19,"endColumn":98},{"ruleId":"156","severity":1,"message":"157","line":20,"column":87,"nodeType":"158","messageId":"159","endLine":20,"endColumn":88},{"ruleId":"156","severity":1,"message":"157","line":21,"column":87,"nodeType":"158","messageId":"159","endLine":21,"endColumn":88},{"ruleId":"156","severity":1,"message":"157","line":22,"column":87,"nodeType":"158","messageId":"159","endLine":22,"endColumn":88},{"ruleId":"156","severity":1,"message":"157","line":23,"column":87,"nodeType":"158","messageId":"159","endLine":23,"endColumn":88},{"ruleId":"156","severity":1,"message":"157","line":24,"column":87,"nodeType":"158","messageId":"159","endLine":24,"endColumn":88},{"ruleId":"156","severity":1,"message":"157","line":19,"column":97,"nodeType":"158","messageId":"159","endLine":19,"endColumn":98},{"ruleId":"156","severity":1,"message":"157","line":20,"column":87,"nodeType":"158","messageId":"159","endLine":20,"endColumn":88},{"ruleId":"156","severity":1,"message":"157","line":21,"column":87,"nodeType":"158","messageId":"159","endLine":21,"endColumn":88},{"ruleId":"156","severity":1,"message":"157","line":22,"column":87,"nodeType":"158","messageId":"159","endLine":22,"endColumn":88},{"ruleId":"156","severity":1,"message":"157","line":23,"column":87,"nodeType":"158","messageId":"159","endLine":23,"endColumn":88},{"ruleId":"156","severity":1,"message":"157","line":24,"column":87,"nodeType":"158","messageId":"159","endLine":24,"endColumn":88},{"ruleId":"160","severity":1,"message":"161","line":80,"column":33,"nodeType":"162","endLine":83,"endColumn":41},{"ruleId":"163","severity":1,"message":"164","line":12,"column":34,"nodeType":"165","messageId":"166","endLine":12,"endColumn":36},{"ruleId":"147","severity":1,"message":"167","line":7,"column":8,"nodeType":"149","endLine":7,"endColumn":18,"suggestions":"168"},{"ruleId":"147","severity":1,"message":"169","line":9,"column":8,"nodeType":"149","endLine":9,"endColumn":18,"suggestions":"170"},{"ruleId":"171","severity":1,"message":"172","line":8,"column":27,"nodeType":"153","messageId":"173","endLine":8,"endColumn":35},{"ruleId":"151","severity":1,"message":"174","line":110,"column":11,"nodeType":"153","messageId":"154","endLine":110,"endColumn":12},{"ruleId":"171","severity":1,"message":"172","line":11,"column":27,"nodeType":"153","messageId":"173","endLine":11,"endColumn":35},{"ruleId":"163","severity":1,"message":"164","line":40,"column":22,"nodeType":"165","messageId":"166","endLine":40,"endColumn":24},{"ruleId":"163","severity":1,"message":"164","line":62,"column":24,"nodeType":"165","messageId":"166","endLine":62,"endColumn":26},{"ruleId":"163","severity":1,"message":"164","line":81,"column":25,"nodeType":"165","messageId":"166","endLine":81,"endColumn":27},{"ruleId":"151","severity":1,"message":"175","line":89,"column":15,"nodeType":"153","messageId":"154","endLine":89,"endColumn":16},{"ruleId":"151","severity":1,"message":"176","line":99,"column":15,"nodeType":"153","messageId":"154","endLine":99,"endColumn":16},"no-native-reassign",["177"],"no-negated-in-lhs",["178"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["179"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useDispatch' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'data', 'names', and 'slugs'. Either include them or remove the dependency array.",["180"],"React Hook useEffect has missing dependencies: 'countryName', 'dailyData', 'slug', and 'totalCases'. Either include them or remove the dependency array.",["181"],"no-self-assign","'caseType' is assigned to itself.","selfAssignment","'g' is assigned a value but never used.","'s' is assigned a value but never used.","'t' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},"Update the dependencies array to be: [dispatch]",{"range":"188","text":"189"},"Update the dependencies array to be: [caseType, data, names, slugs]",{"range":"190","text":"191"},"Update the dependencies array to be: [caseType, countryName, dailyData, slug, totalCases]",{"range":"192","text":"193"},[951,953],"[dispatch]",[208,218],"[caseType, data, names, slugs]",[248,258],"[caseType, countryName, dailyData, slug, totalCases]"]