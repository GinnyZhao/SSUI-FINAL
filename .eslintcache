[{"/Users/Ginny 1/Desktop/SSUI-FINAL/src/index.js":"1","/Users/Ginny 1/Desktop/SSUI-FINAL/src/App.js":"2","/Users/Ginny 1/Desktop/SSUI-FINAL/src/reducers/rootReducer.js":"3","/Users/Ginny 1/Desktop/SSUI-FINAL/src/reducers/countriesReducer.js":"4","/Users/Ginny 1/Desktop/SSUI-FINAL/src/reducers/collectionReducer.js":"5","/Users/Ginny 1/Desktop/SSUI-FINAL/src/reducers/countryDataReducer.js":"6","/Users/Ginny 1/Desktop/SSUI-FINAL/src/reducers/cacheReducer.js":"7","/Users/Ginny 1/Desktop/SSUI-FINAL/src/components/NavBar.js":"8","/Users/Ginny 1/Desktop/SSUI-FINAL/src/containers/New.js":"9","/Users/Ginny 1/Desktop/SSUI-FINAL/src/components/Footer.js":"10","/Users/Ginny 1/Desktop/SSUI-FINAL/src/containers/Show.js":"11","/Users/Ginny 1/Desktop/SSUI-FINAL/src/containers/Collection.js":"12","/Users/Ginny 1/Desktop/SSUI-FINAL/src/containers/Home.js":"13","/Users/Ginny 1/Desktop/SSUI-FINAL/src/containers/Overlay.js":"14","/Users/Ginny 1/Desktop/SSUI-FINAL/src/components/Loader.js":"15","/Users/Ginny 1/Desktop/SSUI-FINAL/src/components/CountryDropdown.js":"16","/Users/Ginny 1/Desktop/SSUI-FINAL/src/components/Province.js":"17","/Users/Ginny 1/Desktop/SSUI-FINAL/src/components/State.js":"18","/Users/Ginny 1/Desktop/SSUI-FINAL/src/components/Country.js":"19","/Users/Ginny 1/Desktop/SSUI-FINAL/src/components/Instructions.js":"20","/Users/Ginny 1/Desktop/SSUI-FINAL/src/components/Countries.js":"21","/Users/Ginny 1/Desktop/SSUI-FINAL/src/d3/Visual.js":"22","/Users/Ginny 1/Desktop/SSUI-FINAL/src/d3/Viz.js":"23","/Users/Ginny 1/Desktop/SSUI-FINAL/src/d3/DrawBar.js":"24","/Users/Ginny 1/Desktop/SSUI-FINAL/src/d3/DrawLine.js":"25","/Users/Ginny 1/Desktop/SSUI-FINAL/src/d3/Color.js":"26"},{"size":717,"mtime":1606810448934,"results":"27","hashOfConfig":"28"},{"size":1203,"mtime":1607491299397,"results":"29","hashOfConfig":"28"},{"size":627,"mtime":1607260243700,"results":"30","hashOfConfig":"28"},{"size":207,"mtime":1606810448936,"results":"31","hashOfConfig":"28"},{"size":226,"mtime":1606810448936,"results":"32","hashOfConfig":"28"},{"size":219,"mtime":1606810448936,"results":"33","hashOfConfig":"28"},{"size":467,"mtime":1606810448935,"results":"34","hashOfConfig":"28"},{"size":1728,"mtime":1607517939526,"results":"35","hashOfConfig":"28"},{"size":1183,"mtime":1606908395428,"results":"36","hashOfConfig":"28"},{"size":735,"mtime":1606987450585,"results":"37","hashOfConfig":"28"},{"size":3388,"mtime":1607443718188,"results":"38","hashOfConfig":"28"},{"size":2748,"mtime":1607442653523,"results":"39","hashOfConfig":"28"},{"size":4059,"mtime":1607578324213,"results":"40","hashOfConfig":"28"},{"size":2745,"mtime":1607324788808,"results":"41","hashOfConfig":"28"},{"size":154,"mtime":1606810448379,"results":"42","hashOfConfig":"28"},{"size":3913,"mtime":1607311359801,"results":"43","hashOfConfig":"28"},{"size":1690,"mtime":1606810448380,"results":"44","hashOfConfig":"28"},{"size":2570,"mtime":1606811687579,"results":"45","hashOfConfig":"28"},{"size":2233,"mtime":1607323202754,"results":"46","hashOfConfig":"28"},{"size":871,"mtime":1607519259898,"results":"47","hashOfConfig":"28"},{"size":2230,"mtime":1607323606785,"results":"48","hashOfConfig":"28"},{"size":305,"mtime":1607323843813,"results":"49","hashOfConfig":"28"},{"size":347,"mtime":1606810448933,"results":"50","hashOfConfig":"28"},{"size":6168,"mtime":1607590603712,"results":"51","hashOfConfig":"28"},{"size":4917,"mtime":1607591523278,"results":"52","hashOfConfig":"28"},{"size":435,"mtime":1607309523358,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"58z1tg",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"56"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"/Users/Ginny 1/Desktop/SSUI-FINAL/src/index.js",[],["117","118"],"/Users/Ginny 1/Desktop/SSUI-FINAL/src/App.js",[],"/Users/Ginny 1/Desktop/SSUI-FINAL/src/reducers/rootReducer.js",[],"/Users/Ginny 1/Desktop/SSUI-FINAL/src/reducers/countriesReducer.js",[],"/Users/Ginny 1/Desktop/SSUI-FINAL/src/reducers/collectionReducer.js",[],"/Users/Ginny 1/Desktop/SSUI-FINAL/src/reducers/countryDataReducer.js",[],"/Users/Ginny 1/Desktop/SSUI-FINAL/src/reducers/cacheReducer.js",[],"/Users/Ginny 1/Desktop/SSUI-FINAL/src/components/NavBar.js",[],"/Users/Ginny 1/Desktop/SSUI-FINAL/src/containers/New.js",["119"],"import React, { useState, useEffect } from 'react';\nimport CountryDropdown from '../components/CountryDropdown'\nimport { Loader } from '../components/Loader'\nimport { useDispatch } from \"react-redux\";\nimport { Instructions } from '../components/Instructions';\n\nconst New = () => {\n    const [isLoading, setIsLoading] = useState(false);\n    const dispatch = useDispatch()\n\n    // fetch basic country data including name, slug and code from Coronavirus COVID19 API\n    useEffect( () => {\n        async function fetchData() {\n            setIsLoading(true);\n\n            var requestOptions = {\n                method: 'GET',\n                redirect: 'follow'\n              };\n            const response = await fetch(\"https://api.covid19api.com/countries\", requestOptions)\n            const data = await response.json()\n            dispatch({ type: 'addCountries', payload: data })\n            setIsLoading(false);\n        }\n        fetchData();\n    }, []); \n\n    return (\n\n        <div>\n            <Instructions />\n\n            {isLoading ? (\n                < Loader />\n            ) : (\n                < CountryDropdown />\n            )}\n        </div>\n    )\n}\n\nexport default New","/Users/Ginny 1/Desktop/SSUI-FINAL/src/components/Footer.js",[],"/Users/Ginny 1/Desktop/SSUI-FINAL/src/containers/Show.js",["120","121","122","123","124","125","126","127","128","129","130"],"// need to add loader logic\nimport data from '../components/data/data.json'\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport Province from '../components/Province'\nimport State from '../components/State'\nimport Country from '../components/Country'\n\nimport { Card } from 'react-bootstrap'\nimport { Col } from 'react-bootstrap'\nimport { Row } from 'react-bootstrap'\n\nimport { selectAll } from 'd3'\nimport { NavLink } from 'react-router-dom';\n\n\n\nconst Show = (props) => {\n    // const cache = useSelector(state => state.cache)\n    // const collection = useSelector(state => state.collection)\n    console.log(props);\n    const name = props.location.countryName;\n    // let nameCap = name.charAt(0).toUpperCase() + name.slice(1)\n    // if (nameCap === \"United-states\") {\n    //     nameCap = \"United States of America\";\n    // }\n    // if (nameCap === \"Korea-south\") {\n    //     nameCap = \"Korea (South)\"\n    // }\n\n    const countryData = useSelector(state => state.countryData)\n    // let index = 0;\n    // console.log(nameCap)\n    // console.log(Object.keys(countryData[0])[0])\n\n    let index = countryData.findIndex(obj => Object.keys(obj)[0] === name);\n    console.log(index);\n\n    const [caseType, setCaseType] = useState(\"\");\n        return (\n            <div>\n                <Row >\n                    <Col xs=\"12\" sm=\"6\" md=\"4\" lg=\"3\" xl=\"3\">\n                        <div className=\"card button-col\">\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"cases block\" value=\"total\">Total Cases</button>\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"deathsPerOneMillion block\" value=\"deaths\">Deaths</button>\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"activee block\" value=\"active\"> Active Cases</button>\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"recovered block\" value=\"recovered\">Recovered Cases</button>\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"daily block\" value=\"daily\"> Daily Confirmed Cases </button>\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"daily_deaths block\" value=\"daily_deaths\"> Daily Deaths </button>\n                        </div>\n                        <NavLink to='/collection'>\n                            <button className=\"dark\" style={{\"font-size\": \"16px\"}}> Back to side-by-side View </button>\n                        </NavLink>\n                    </Col>\n\n                    <Col sm=\"12\" md=\"9\" lg=\"9\" xl=\"9\">\n                        <Card>\n                            <NavLink to='/collection'>\n                                <Country caseType={caseType} country={countryData[index]}/>\n                                {/* <Province caseType={caseType} province={provincesData[0].Country} provinceData={provincesData}/>  */}\n                            </NavLink>\n                        </Card>\n                    </Col>\n                </Row>\n            </div>\n        )\n\n}\n\nexport default Show","/Users/Ginny 1/Desktop/SSUI-FINAL/src/containers/Collection.js",["131","132","133","134","135","136"],"import React, { useState } from 'react';\nimport { Redirect } from \"react-router\"\nimport Country from '../components/Country'\nimport { selectAll } from 'd3'\nimport { useSelector } from 'react-redux'\nimport { NavLink } from 'react-router-dom';\nimport \"./Collection.css\"\n\n\nconst Collection = () => {\n    const countryData = useSelector(state => state.countryData)\n    const [caseType, setCaseType] = useState(\"\");\n\n    if (countryData) {\n        return (\n            <div className=\"row\">\n                    <div className=\"col-sm-12 col-md-6 col-lg-3\">\n                        <div className='card button-col'>\n                            <button autofocus onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove(), event.preventDefault())} className=\"cases block\" value=\"total\">Total Cases</button>\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"deathsPerOneMillion block\" value=\"deaths\">Deaths</button>\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"activee block\" value=\"active\"> Active Cases</button>\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"recovered block\" value=\"recovered\">Recovered Cases</button>\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"daily block\" value=\"daily\"> Daily Confirmed Cases </button>\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"daily_deaths block\" value=\"daily_deaths\"> Daily Deaths </button>\n                        </div>\n                        <NavLink to='/new'>\n                            <button className=\"dark\"> Back to Main </button>\n                        </NavLink>\n                    </div>\n\n                    <div className=\"col-sm-12 col-md-6 col-lg-9\">\n                        <div className=\"countries\">\n                            {countryData.map((country, index) => { \n                                return (\n                                    <div className=\"country\">\n                                        <Country caseType={caseType} country={country}/>  \n                                    </div>\n                                )\n                            })}\n                        </div>\n                    </div>\n            </div>\n        )\n    } else {\n        return <Redirect to='/' />\n        // return <Redirect to={process.env.PUBLIC_URL} />\n        // return <h3>Use the Buttons Above to Get Started</h3>\n\n    }\n}\n\nexport default Collection\n","/Users/Ginny 1/Desktop/SSUI-FINAL/src/containers/Home.js",[],"/Users/Ginny 1/Desktop/SSUI-FINAL/src/containers/Overlay.js",["137","138","139","140","141","142"],"import React, { useState } from 'react';\nimport { Redirect } from \"react-router\"\nimport Countries from '../components/Countries'\nimport { selectAll } from 'd3'\nimport { useSelector } from 'react-redux'\nimport { NavLink } from 'react-router-dom';\n\n\nconst Overlay = () => {\n    const countryData = useSelector(state => state.countryData)\n    console.log(countryData)\n    const [caseType, setCaseType] = useState(\"\");\n\n    if (countryData) {\n        return (\n            <div className=\"row\">\n                    <div className=\"col-sm-12 col-md-6 col-lg-3\">\n                        <div className='card button-col'>\n                            <button autofocus onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"cases block\" value=\"total\">Total Cases</button>\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"deathsPerOneMillion block\" value=\"deaths\">Deaths</button>\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"activee block\" value=\"active\"> Active Cases</button>\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"recovered block\" value=\"recovered\">Recovered Cases</button>\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"daily block\" value=\"daily\"> Daily Confirmed Cases </button>\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"daily_deaths block\" value=\"daily_deaths\"> Daily Deaths </button>\n                        </div>\n                        <NavLink to='/new'>\n                            <button className=\"dark\"> Back to Main </button>\n                        </NavLink>\n                    </div>\n\n                    <div className=\"col-sm-12 col-md-6 col-lg-9\">\n                        <Countries caseType={caseType} countries={countryData}/>  \n                            {/* {countryData.map((country, index) => { \n                                return (\n                                    <div className=\"country\">\n                                            <Countries caseType={caseType} countries={countryData}/>  \n                                    </div>\n                                )\n                            })} */}\n                    </div>\n            </div>\n        )\n    } else {\n        return <Redirect to='/' />\n        // return <Redirect to={process.env.PUBLIC_URL} />\n        // return <h3>Use the Buttons Above to Get Started</h3>\n\n    }\n}\n\nexport default Overlay\n","/Users/Ginny 1/Desktop/SSUI-FINAL/src/components/Loader.js",[],"/Users/Ginny 1/Desktop/SSUI-FINAL/src/components/CountryDropdown.js",["143","144"],"import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { NavLink } from 'react-router-dom';\nimport \"./CountryDropdown.css\";\nimport Delete from \"../img/delete.png\";\n\nconst CountryDropdown = (props) => {\n\n    const countries = useSelector(state => state.countries)\n    const collection = useSelector(state => state.collection)\n    const dispatch = useDispatch()\n    let display = true;\n\n\n// Fetch specific country covid data based on user's choice in the select option\n    const fetchCountry = (event) => {\n        const [slug, country, ISO2] = event.target.value.split(\",\") \n\n        async function fetchData() {\n\n            const requestOptions = {\n                method: 'GET',\n                redirect: 'follow'\n            };\n            \n            const response = await fetch(`https://api.covid19api.com/total/country/` + slug, requestOptions)\n\n            const data = await response.json()\n            const parsedData = data.filter(day => day.Confirmed > 0)\n\n            dispatch( { type: 'addCountryData', payload: { [country]: parsedData }} )\n            dispatch( { type: 'addCountryToCollection', payload: {slug, country, ISO2}} )\n        }\n        fetchData();\n    }\n\n    const invalid = () => collection.length === 0\n\n    return (\n        <div className=\"row\">\n            <div className=\"col-sm-12 col-md-6 col-lg-3\">\n\n                <h6 className=\"instruction\"> Select country to display: </h6>\n\n                <select class=\"dropdown\" onChange={event => fetchCountry(event)}>\n                \n                    <option placeholder=\"Countries\"> Countries </option>\n                    {countries.sort((a, b) => (a.Country > b.Country) ? 1 : -1).map(country => (\n                        <option\n                            id={country.Slug}\n                            key={country.Slug}\n                            value={[country.Slug, country.Country, country.ISO2]}\n                        >\n                        {country.Country}\n                        </option> \n                    ))}\n                </select>\n\n                <NavLink to='/collection'>\n                    <button className=\"dark\" disabled={invalid()}>View side-by-side plot</button>\n                </NavLink>\n                \n                <NavLink to=\"/overlay\">\n                    <button className=\"dark\" disabled={invalid()}> View overlay plot </button>\n                </NavLink>\n                {/* <button className=\"dark\" disabled={invalid()} onClick={() => {display = false}}> Reset </button> */}\n            </div>\n\n            <div className=\"col-sm-12 col-md-6 col-lg-9\">\n                <div className=\"countries\">\n                {collection.map( (country, index) => {\n                    const flagUrl = `https://disease.sh/assets/img/flags/${country.ISO2.toLowerCase()}.png`\n                    // const flagUrl = `https://www.countryflags.io/${country.ISO2.toLowerCase()}/flat/64.png`\n                    // const flagUrl = `https://flagcdn.com/256x192/${country.ISO2.toLowerCase()}.png`\n                    const worldUrl = `https://freesvg.org/img/Globe-Icon-Umber.png`\n\n                    return (\n\n                            <div className={display ? \"country\" : \"none\"}>\n                                <img className=\"flag\" key={country.slug} src={flagUrl} onError={(e)=>{ \n                                    if (e.target.src !== worldUrl) {\n                                        e.target.src=worldUrl;}\n                                    }}/>\n                                <h5 className=\"countryName\">{country.country}</h5>\n                                {/* <button className=\"delete\" onClick={() => {collection.splice(index, 1)}}> Delete </button> */}\n                            </div>\n                    )\n                })}\n                </div>\n            </div>\n\n            </div>\n\n    )\n}\n\nexport default CountryDropdown\n\n\n","/Users/Ginny 1/Desktop/SSUI-FINAL/src/components/Province.js",["145","146","147","148","149","150"],"import React from 'react';\nimport Viz from '../d3/Viz'\nimport { useSelector } from 'react-redux'\nimport { NavLink } from 'react-router-dom';\nimport { Loader } from './Loader'\n\nconst Province = ({caseType, province, provinceData}) => {\n    province ? province = province : province = provinceData[0].Country\n    console.log(province)\n    console.log(provinceData)\n    const totalCases = () => provinceData.length === 0 ? 0 : provinceData[provinceData.length-1].Confirmed\n    const slug = (province) => {\n        return province\n        .toString()\n        .trim()\n        .toLowerCase()\n        .replace(/\\s+/g, \"-\")\n        .replace(/[^\\w\\-]+/g, \"\")\n        .replace(/\\-\\-+/g, \"-\")\n        .replace(/^-+/, \"\")\n        .replace(/-+$/, \"\");\n    }\n\n        const array = []\n        const parseData = (provinceData, array) => {\n            provinceData.forEach( (day, index) => {\n                array.push({\n                    dayCount: index + 1,\n                    date: new Date(day.Date),\n                    total: day.Confirmed, \n                    active: day.Active, \n                    recovered: day.Recovered, \n                    deaths: day.Deaths\n                })\n            })\n            return array\n        }\n\n    if (provinceData) {\n\n        return (\n                // <NavLink to={{\n                //     pathname: `/countries/${slug}`,\n                //     slug\n                //     }}>\n                    <Viz countryName={province} totalCases={totalCases()} dailyData={parseData(provinceData, array)} caseType={caseType} slug={slug(province)}/>\n                // </NavLink>\n        )\n    } else {\n        return <Loader />\n    }\n}\n\nexport default Province","/Users/Ginny 1/Desktop/SSUI-FINAL/src/components/State.js",["151","152","153","154"],"import React from 'react';\nimport Viz from '../d3/Viz'\n\nconst State = ({caseType, state, stateData, countryName}) => {\n    state ? state = state : state = countryName\n\n    const slug = (state) => {\n        return state\n        .toString()\n        .trim()\n        .toLowerCase()\n        .replace(/\\s+/g, \"-\")\n        .replace(/[^\\w\\-]+/g, \"\")\n        .replace(/\\-\\-+/g, \"-\")\n        .replace(/^-+/, \"\")\n        .replace(/-+$/, \"\");\n    }\n\n\n    // need to refactor to merge entries for each day\n        const array = []\n        const parseData = (stateData, array) => {\n            stateData.forEach( day => {\n                const date = day.Date.substring(0, 10)\n                if (!array.includes(date)) {\n                    array.push(date)\n                }\n            })\n\n            const dateArray = array.map(date => stateData.filter(day =>  day.Date.substring(0,10) === date))\n\n            const parsedData = dateArray.map( (d, index) => {\n                const dayCount = index + 1\n                const date = new Date(d[0].Date)\n\n                const total = () => {\n                    let sum = 0\n                    for (let element of d) {\n                        sum += element.Confirmed\n                    }\n                    return sum\n                }\n\n                const active = () => {\n                    let sum = 0\n                    for (let element of d) {\n                        sum += element.Active\n                    }\n                    return sum\n                }\n\n                const recovered = () => {\n                    let sum = 0\n                    for (let element of d) {\n                        sum += element.Recovered\n                    }\n                    return sum\n                }\n\n                const deaths = () => {\n                    let sum = 0\n                    for (let element of d) {\n                        sum += element.Deaths\n                    }\n                    return sum\n                }\n\n                return {dayCount, date, total: total(), active: active(), recovered: recovered(), deaths: deaths()}\n            })\n            return parsedData\n        }\n\n        const dailyData = parseData(stateData, array)\n        const totalCases = dailyData[dailyData.length - 1].total\n\n        return (\n            <Viz countryName={state} totalCases={totalCases} dailyData={dailyData} caseType={caseType} slug={slug(state)}/>\n        )\n}\n\nexport default State\n\n\n    // <NavLink to={{\n    //     pathname: `/countries/${slug}`,\n    //     slug\n    //     }}>\n    // </NavLink>","/Users/Ginny 1/Desktop/SSUI-FINAL/src/components/Country.js",[],"/Users/Ginny 1/Desktop/SSUI-FINAL/src/components/Instructions.js",[],"/Users/Ginny 1/Desktop/SSUI-FINAL/src/components/Countries.js",["155","156"],"import React from 'react';\nimport Visual from '../d3/Visual'\nimport { useSelector } from 'react-redux'\nimport { NavLink } from 'react-router-dom';\n\nconst Countries = ({caseType, countries}) => {\n    const collection = useSelector(state => state.collection)\n    const res =  []\n    const slug_res = []\n    const names = []\n\n\n    countries.map((country, idx) => {\n        const countryName = Object.keys(country)[0]\n        const dailyData = country[countryName]       \n        const slug = collection.find(obj => obj.country === countryName).slug\n\n        const array = []\n        const parseData = (data, array) => {\n            data.forEach( (day, index) => {\n                let newCases = 0;\n                let newDeaths = 0;\n                if (index === 0) {\n                    newCases = 0;\n                    newDeaths = 0;\n                } else {\n                    newCases = day.Confirmed - data[index-1].Confirmed;\n                    newDeaths = day.Deaths - data[index-1].Deaths;\n\n                }\n                array.push({\n                    dayCount: index + 1,\n                    date: new Date(day.Date),\n                    total: day.Confirmed, \n                    active: day.Active, \n                    recovered: day.Recovered, \n                    deaths: day.Deaths,\n                    daily: newCases,\n                    daily_deaths: newDeaths,\n                })\n            })\n            console.log(array);\n            return array\n        }\n        res.push(parseData(dailyData, array));\n        slug_res.push(slug);\n        names.push(countryName);\n    })\n\n    console.log(res)\n    console.log(slug_res)\n\n    return (\n        <Visual names = {names} data = {res} caseType = {caseType} slugs = {slug_res}/>\n    )\n\n    // const totalCases = () => dailyData.length === 0 ? 0 : dailyData[dailyData.length-1].Confirmed\n\n    \n\n    // return (\n    //     <NavLink to={{\n    //         pathname: `/countries/${slug}`,\n    //         slug,\n    //         countryName\n    //         }}>\n    //         <Viz countryName={countryName} totalCases={totalCases()} dailyData={parseData(dailyData, array)} caseType={caseType} slug={slug}/>\n    //     </NavLink>\n    // )\n}\n\nexport default Countries\n\n","/Users/Ginny 1/Desktop/SSUI-FINAL/src/d3/Visual.js",["157"],"import React, { useEffect } from 'react';\nimport DrawLine from './DrawLine'\n\nconst Visual = ( {names, data, caseType, slugs}) => {\n\n    useEffect( () => {\n\n        DrawLine(names, data, slugs, caseType)\n    }, [caseType])\n\n    return (\n        <div className={\"viz\"} ></div>\n    )\n}\n\nexport default Visual","/Users/Ginny 1/Desktop/SSUI-FINAL/src/d3/Viz.js",["158"],"import React, { useEffect } from 'react';\nimport DrawBar from './DrawBar'\n\nconst Viz = ( {caseType, countryName, totalCases, dailyData, slug}) => {\n\n    useEffect( () => {\n\n        DrawBar(countryName, totalCases, dailyData, slug, caseType)\n    }, [caseType])\n\n    return (\n        <div className={\"viz\" + slug} ></div>\n    )\n}\n\nexport default Viz","/Users/Ginny 1/Desktop/SSUI-FINAL/src/d3/DrawBar.js",["159","160","161"],"/Users/Ginny 1/Desktop/SSUI-FINAL/src/d3/DrawLine.js",["162","163","164","165","166","167"],"/Users/Ginny 1/Desktop/SSUI-FINAL/src/d3/Color.js",[],{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","severity":1,"message":"173","line":26,"column":8,"nodeType":"174","endLine":26,"endColumn":10,"suggestions":"175"},{"ruleId":"176","severity":1,"message":"177","line":2,"column":8,"nodeType":"178","messageId":"179","endLine":2,"endColumn":12},{"ruleId":"176","severity":1,"message":"180","line":4,"column":27,"nodeType":"178","messageId":"179","endLine":4,"endColumn":36},{"ruleId":"176","severity":1,"message":"181","line":5,"column":23,"nodeType":"178","messageId":"179","endLine":5,"endColumn":34},{"ruleId":"176","severity":1,"message":"182","line":7,"column":8,"nodeType":"178","messageId":"179","endLine":7,"endColumn":16},{"ruleId":"176","severity":1,"message":"183","line":8,"column":8,"nodeType":"178","messageId":"179","endLine":8,"endColumn":13},{"ruleId":"184","severity":1,"message":"185","line":47,"column":87,"nodeType":"186","messageId":"187","endLine":47,"endColumn":88},{"ruleId":"184","severity":1,"message":"185","line":48,"column":87,"nodeType":"186","messageId":"187","endLine":48,"endColumn":88},{"ruleId":"184","severity":1,"message":"185","line":49,"column":87,"nodeType":"186","messageId":"187","endLine":49,"endColumn":88},{"ruleId":"184","severity":1,"message":"185","line":50,"column":87,"nodeType":"186","messageId":"187","endLine":50,"endColumn":88},{"ruleId":"184","severity":1,"message":"185","line":51,"column":87,"nodeType":"186","messageId":"187","endLine":51,"endColumn":88},{"ruleId":"184","severity":1,"message":"185","line":52,"column":87,"nodeType":"186","messageId":"187","endLine":52,"endColumn":88},{"ruleId":"184","severity":1,"message":"185","line":19,"column":97,"nodeType":"186","messageId":"187","endLine":19,"endColumn":98},{"ruleId":"184","severity":1,"message":"185","line":20,"column":87,"nodeType":"186","messageId":"187","endLine":20,"endColumn":88},{"ruleId":"184","severity":1,"message":"185","line":21,"column":87,"nodeType":"186","messageId":"187","endLine":21,"endColumn":88},{"ruleId":"184","severity":1,"message":"185","line":22,"column":87,"nodeType":"186","messageId":"187","endLine":22,"endColumn":88},{"ruleId":"184","severity":1,"message":"185","line":23,"column":87,"nodeType":"186","messageId":"187","endLine":23,"endColumn":88},{"ruleId":"184","severity":1,"message":"185","line":24,"column":87,"nodeType":"186","messageId":"187","endLine":24,"endColumn":88},{"ruleId":"184","severity":1,"message":"185","line":19,"column":97,"nodeType":"186","messageId":"187","endLine":19,"endColumn":98},{"ruleId":"184","severity":1,"message":"185","line":20,"column":87,"nodeType":"186","messageId":"187","endLine":20,"endColumn":88},{"ruleId":"184","severity":1,"message":"185","line":21,"column":87,"nodeType":"186","messageId":"187","endLine":21,"endColumn":88},{"ruleId":"184","severity":1,"message":"185","line":22,"column":87,"nodeType":"186","messageId":"187","endLine":22,"endColumn":88},{"ruleId":"184","severity":1,"message":"185","line":23,"column":87,"nodeType":"186","messageId":"187","endLine":23,"endColumn":88},{"ruleId":"184","severity":1,"message":"185","line":24,"column":87,"nodeType":"186","messageId":"187","endLine":24,"endColumn":88},{"ruleId":"176","severity":1,"message":"188","line":6,"column":8,"nodeType":"178","messageId":"179","endLine":6,"endColumn":14},{"ruleId":"189","severity":1,"message":"190","line":81,"column":33,"nodeType":"191","endLine":84,"endColumn":41},{"ruleId":"176","severity":1,"message":"192","line":3,"column":10,"nodeType":"178","messageId":"179","endLine":3,"endColumn":21},{"ruleId":"176","severity":1,"message":"193","line":4,"column":10,"nodeType":"178","messageId":"179","endLine":4,"endColumn":17},{"ruleId":"194","severity":1,"message":"195","line":8,"column":27,"nodeType":"178","messageId":"196","endLine":8,"endColumn":35},{"ruleId":"197","severity":1,"message":"198","line":18,"column":23,"nodeType":"199","messageId":"200","endLine":18,"endColumn":24,"suggestions":"201"},{"ruleId":"197","severity":1,"message":"198","line":19,"column":19,"nodeType":"199","messageId":"200","endLine":19,"endColumn":20,"suggestions":"202"},{"ruleId":"197","severity":1,"message":"198","line":19,"column":21,"nodeType":"199","messageId":"200","endLine":19,"endColumn":22,"suggestions":"203"},{"ruleId":"194","severity":1,"message":"204","line":5,"column":21,"nodeType":"178","messageId":"196","endLine":5,"endColumn":26},{"ruleId":"197","severity":1,"message":"198","line":13,"column":23,"nodeType":"199","messageId":"200","endLine":13,"endColumn":24,"suggestions":"205"},{"ruleId":"197","severity":1,"message":"198","line":14,"column":19,"nodeType":"199","messageId":"200","endLine":14,"endColumn":20,"suggestions":"206"},{"ruleId":"197","severity":1,"message":"198","line":14,"column":21,"nodeType":"199","messageId":"200","endLine":14,"endColumn":22,"suggestions":"207"},{"ruleId":"176","severity":1,"message":"193","line":4,"column":10,"nodeType":"178","messageId":"179","endLine":4,"endColumn":17},{"ruleId":"208","severity":1,"message":"209","line":13,"column":34,"nodeType":"210","messageId":"211","endLine":13,"endColumn":36},{"ruleId":"172","severity":1,"message":"212","line":9,"column":8,"nodeType":"174","endLine":9,"endColumn":18,"suggestions":"213"},{"ruleId":"172","severity":1,"message":"214","line":9,"column":8,"nodeType":"174","endLine":9,"endColumn":18,"suggestions":"215"},{"ruleId":"176","severity":1,"message":"216","line":4,"column":8,"nodeType":"178","messageId":"179","endLine":4,"endColumn":13},{"ruleId":"194","severity":1,"message":"217","line":10,"column":27,"nodeType":"178","messageId":"196","endLine":10,"endColumn":35},{"ruleId":"176","severity":1,"message":"218","line":124,"column":11,"nodeType":"178","messageId":"179","endLine":124,"endColumn":12},{"ruleId":"194","severity":1,"message":"217","line":13,"column":27,"nodeType":"178","messageId":"196","endLine":13,"endColumn":35},{"ruleId":"208","severity":1,"message":"209","line":42,"column":22,"nodeType":"210","messageId":"211","endLine":42,"endColumn":24},{"ruleId":"208","severity":1,"message":"209","line":64,"column":24,"nodeType":"210","messageId":"211","endLine":64,"endColumn":26},{"ruleId":"208","severity":1,"message":"209","line":83,"column":25,"nodeType":"210","messageId":"211","endLine":83,"endColumn":27},{"ruleId":"176","severity":1,"message":"219","line":91,"column":15,"nodeType":"178","messageId":"179","endLine":91,"endColumn":16},{"ruleId":"176","severity":1,"message":"220","line":102,"column":15,"nodeType":"178","messageId":"179","endLine":102,"endColumn":16},"no-native-reassign",["221"],"no-negated-in-lhs",["222"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["223"],"no-unused-vars","'data' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useDispatch' is defined but never used.","'Province' is defined but never used.","'State' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'Delete' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useSelector' is defined but never used.","'NavLink' is defined but never used.","no-self-assign","'province' is assigned to itself.","selfAssignment","no-useless-escape","Unnecessary escape character: \\-.","Literal","unnecessaryEscape",["224","225"],["226","227"],["228","229"],"'state' is assigned to itself.",["230","231"],["232","233"],["234","235"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'data', 'names', and 'slugs'. Either include them or remove the dependency array.",["236"],"React Hook useEffect has missing dependencies: 'countryName', 'dailyData', 'slug', and 'totalCases'. Either include them or remove the dependency array.",["237"],"'d3Tip' is defined but never used.","'caseType' is assigned to itself.","'g' is assigned a value but never used.","'s' is assigned a value but never used.","'t' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"238","fix":"239"},{"messageId":"240","fix":"241","desc":"242"},{"messageId":"243","fix":"244","desc":"245"},{"messageId":"240","fix":"246","desc":"242"},{"messageId":"243","fix":"247","desc":"245"},{"messageId":"240","fix":"248","desc":"242"},{"messageId":"243","fix":"249","desc":"245"},{"messageId":"240","fix":"250","desc":"242"},{"messageId":"243","fix":"251","desc":"245"},{"messageId":"240","fix":"252","desc":"242"},{"messageId":"243","fix":"253","desc":"245"},{"messageId":"240","fix":"254","desc":"242"},{"messageId":"243","fix":"255","desc":"245"},{"desc":"256","fix":"257"},{"desc":"258","fix":"259"},"Update the dependencies array to be: [dispatch]",{"range":"260","text":"261"},"removeEscape",{"range":"262","text":"263"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"264","text":"265"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"266","text":"263"},{"range":"267","text":"265"},{"range":"268","text":"263"},{"range":"269","text":"265"},{"range":"270","text":"263"},{"range":"271","text":"265"},{"range":"272","text":"263"},{"range":"273","text":"265"},{"range":"274","text":"263"},{"range":"275","text":"265"},"Update the dependencies array to be: [caseType, data, names, slugs]",{"range":"276","text":"277"},"Update the dependencies array to be: [caseType, countryName, dailyData, slug, totalCases]",{"range":"278","text":"279"},[951,953],"[dispatch]",[638,639],"",[638,638],"\\",[668,669],[668,668],[670,671],[670,670],[330,331],[330,330],[360,361],[360,360],[362,363],[362,362],[210,220],"[caseType, data, names, slugs]",[248,258],"[caseType, countryName, dailyData, slug, totalCases]"]