{"ast":null,"code":"import { max, scaleBand, scaleLinear, axisBottom, axisLeft, select } from 'd3';\nimport { line, curveMonotoneX } from 'd3-shape'; // import * as d3 from \"d3\";\n\nimport d3Tip from \"d3-tip\";\nimport { color } from './Color';\n\nconst DrawBar = (countryName, totalCases, dailyData, id, caseType) => {\n  console.log(dailyData);\n  caseType ? caseType = caseType : caseType = \"total\"; // captilize the first character\n\n  function capFirst(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  } // setting up constants for sizes\n\n\n  const width = 960;\n  const height = 500;\n  const padding = .2;\n  const margin = {\n    top: 80,\n    right: 0,\n    bottom: 80,\n    left: 80\n  };\n  const innerWidth = width - margin.left - margin.right; // const innerHeight = height - margin.top - margin.bottom;\n\n  const vizName = \"viz\" + id; // setting constants for text labels and title\n\n  const xAxisLabel = \"Number of Days\";\n  const yAxisLabel = caseType ? `Number of Cases: ${capFirst(caseType)}` : \"Number of Cases\";\n  const title = countryName;\n\n  const subtitle = () => {\n    if (dailyData.length > 0) {\n      return totalCases.toLocaleString('en') + \" COVID-19 Cases Reported Since \" + dailyData[0].date.toLocaleDateString();\n    } else {\n      return totalCases + \" COVID-19 Cases Reported\";\n    }\n  };\n\n  const xScale = scaleBand().domain(dailyData.map(d => d.dayCount)).range([margin.left, width - margin.right]).padding(padding);\n  const yScale = scaleLinear().domain([0, max(dailyData, d => d[`${caseType}`])]).range([height - margin.bottom, margin.top]);\n  const lineGenerator = line().x(d => xScale(d.dayCount)).y(d => yScale(d[`${caseType}`])).curve(curveMonotoneX);\n\n  const xAxis = g => {\n    g.attr(\"transform\", `translate(0,${height - margin.bottom})`).call(axisBottom(xScale).tickValues(xScale.domain().filter(function (d, i) {\n      return !((i + 1) % 10);\n    }))).call(g => g.append(\"text\").attr(\"x\", -margin.left).attr(\"y\", 10).attr(\"fill\", \"currentColor\").attr(\"text-anchor\", \"start\").text(dailyData.dayCount));\n  };\n\n  const yAxis = g => {\n    g.attr(\"transform\", `translate(${margin.left},0)`).call(axisLeft(yScale).ticks(null, dailyData.format).tickSize(-innerWidth)).call(g => g.select(\".domain\").remove()).call(g => g.append(\"text\").attr(\"x\", -margin.left).attr(\"y\", 10).attr(\"fill\", \"currentColor\").attr(\"text-anchor\", \"start\").text(dailyData.total));\n  }; // setting up tooltip with data labels\n  // const tip = d3Tip()\n  //     .attr('class', 'd3-tip')\n  //     .offset([-10, 0])\n  //     .html(function(d) {\n  //         return \"<p>\" + \"<span style='color:white'>\" + \"Day \" + d.dayCount.toLocaleString('en') + \"<br/>\" +\n  //             d.date.toLocaleDateString() + \"<br/>\" + \"</span>\" +\n  //             \"<span style='color:#BD2D28'>\" + d.total.toLocaleString('en') + \" Total\" + \"<br/>\" + \"</span>\" +\n  //             \"<span style='color:#E3BA22'>\" + d.active.toLocaleString('en') + \" Active\" + \"<br/>\" + \"</span>\" +\n  //             \"<span style='color:#A0B700'>\" + d.recovered.toLocaleString('en') + \" Recovered\" + \"<br/>\" + \"</span>\" +\n  //             \"<span style='color:#BA5F06'>\" + d.deaths.toLocaleString('en') + \" Deaths\" + \"</p>\" \n  //     })\n  // setting up svg element on card\n\n\n  const svg = select(`.${vizName}`).append(\"svg\").attr(\"preserveAspectRatio\", \"xMinYMid meet\").attr(\"viewBox\", [0, 0, width, height]); // const g = svg.append(\"g\")\n  //     .attr(\"fill\", color(caseType))\n  //     .selectAll('rect')\n  //     .data(dailyData)\n  //     .join(\"rect\")\n  //     .attr('x', d => xScale(d.dayCount))\n  //     .attr(\"y\", d => yScale(d[`${caseType}`]))\n  //     .attr(\"width\", xScale.bandwidth())\n  //     .attr(\"height\", d => yScale(0) - yScale(d[`${caseType}`]))\n  //     .attr(\"class\", \"bar\")\n  //     .on('mouseover', tip.show)\n  //     .on('mouseout', tip.hide)\n\n  const g = svg.append('path').attr(\"fill\", \"none\").datum(dailyData) // .attr('x', d => xScale(d.dayCount))\n  .attr('stroke', color(caseType)).attr('stroke-width', 2).attr('class', 'line').attr('d', lineGenerator); // .attr(\"y\", d => yScale(d[`${caseType}`]))\n  // .attr(\"width\", xScale.bandwidth())\n  // .attr(\"height\", d => yScale(0) - yScale(d[`${caseType}`]))\n  // const s = svg.append('path')\n  //     .attr(\"fill\", \"none\")\n  //     .datum(dailyData)\n  //     // .attr('x', d => xScale(d.dayCount))\n  //     .attr('stroke', color(caseType))\n  //     .attr('stroke-width', 2)\n  //     .attr('class', 'line') \n  //     .attr('d', lineGenerator)\n\n  const xAxisG = svg.append('g').call(xAxis);\n  xAxisG.select('.domain').remove();\n  xAxisG.append('text').attr('class', 'axis-label').attr('y', 45).attr('x', innerWidth / 2).attr('fill', 'black').text(xAxisLabel);\n  const yAxisG = svg.append('g').call(yAxis);\n  yAxisG.select('.domain').remove();\n  yAxisG.append('text').attr('class', 'axis-label').attr('y', -60).attr('x', -height / 2).attr('fill', 'black').attr('transform', `rotate(-90)`).attr('text-anchor', 'middle').text(yAxisLabel);\n  const titleG = svg.append(\"g\");\n  titleG.append('text').attr('class', 'title').attr('x', width / 2).attr('y', 40).attr('text-anchor', 'middle').text(title);\n  titleG.append('text').attr('class', 'subtitle').attr('x', width / 2).attr('y', 70).attr('text-anchor', 'middle').text(subtitle()); // svg.call(tip);\n};\n\n_c = DrawBar;\nexport default DrawBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"DrawBar\");","map":{"version":3,"sources":["/Users/Ginny 1/Desktop/SSUI-FINAL/src/d3/DrawBar.js"],"names":["max","scaleBand","scaleLinear","axisBottom","axisLeft","select","line","curveMonotoneX","d3Tip","color","DrawBar","countryName","totalCases","dailyData","id","caseType","console","log","capFirst","string","charAt","toUpperCase","slice","width","height","padding","margin","top","right","bottom","left","innerWidth","vizName","xAxisLabel","yAxisLabel","title","subtitle","length","toLocaleString","date","toLocaleDateString","xScale","domain","map","d","dayCount","range","yScale","lineGenerator","x","y","curve","xAxis","g","attr","call","tickValues","filter","i","append","text","yAxis","ticks","format","tickSize","remove","total","svg","datum","xAxisG","yAxisG","titleG"],"mappings":"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","sourcesContent":["import { max, scaleBand, scaleLinear, axisBottom, axisLeft, select } from 'd3';\nimport { line, curveMonotoneX } from 'd3-shape';\n// import * as d3 from \"d3\";\nimport d3Tip from \"d3-tip\";\nimport { color } from './Color'\n\nconst DrawBar = (countryName, totalCases, dailyData, id, caseType) => {\n    console.log(dailyData)\n\n    caseType ? caseType = caseType : caseType = \"total\"\n\n    // captilize the first character\n    function capFirst(string) {\n        return string.charAt(0).toUpperCase() + string.slice(1);\n    }\n\n    // setting up constants for sizes\n    const width = 960\n    const height = 500\n    const padding = .2\n    const margin = ({top: 80, right: 0, bottom: 80, left: 80})\n    const innerWidth = width - margin.left - margin.right;\n    // const innerHeight = height - margin.top - margin.bottom;\n    const vizName = \"viz\" + id\n\n    // setting constants for text labels and title\n    const xAxisLabel = \"Number of Days\"\n    const yAxisLabel = caseType ? `Number of Cases: ${capFirst(caseType)}` : \"Number of Cases\"\n    const title = countryName\n    const subtitle = () => {\n        if (dailyData.length > 0) {\n            return totalCases.toLocaleString('en') + \" COVID-19 Cases Reported Since \" + dailyData[0].date.toLocaleDateString()\n        } else {\n            return totalCases + \" COVID-19 Cases Reported\"\n        }\n    }\n\n    const xScale = scaleBand()\n        .domain(dailyData.map(d => d.dayCount))\n        .range([margin.left, width - margin.right])\n        .padding(padding)\n\n    const yScale = scaleLinear()\n        .domain([0, max(dailyData, d => d[`${caseType}`])])\n        .range([height - margin.bottom, margin.top])\n\n    const lineGenerator = line()\n      .x(d =>  xScale(d.dayCount))\n      .y(d =>  yScale(d[`${caseType}`]))\n      .curve(curveMonotoneX);\n\n    const xAxis = (g) => {\n        g.attr(\"transform\", `translate(0,${height - margin.bottom})`)\n        .call(axisBottom(xScale)\n        .tickValues(xScale.domain().filter(function(d,i){ return !(((i+1)%10))})))\n\n\n        .call(g => g.append(\"text\")\n            .attr(\"x\", -margin.left)\n            .attr(\"y\", 10)\n            .attr(\"fill\", \"currentColor\")\n            .attr(\"text-anchor\", \"start\")\n            .text(dailyData.dayCount))\n    }\n\n    const yAxis = (g) => {\n        g.attr(\"transform\", `translate(${margin.left},0)`)\n        .call(axisLeft(yScale).ticks(null, dailyData.format).tickSize(-innerWidth))\n            \n            .call(g => g.select(\".domain\").remove())\n\n        .call(g => g.append(\"text\")\n            .attr(\"x\", -margin.left)\n            .attr(\"y\", 10)\n            .attr(\"fill\", \"currentColor\")\n            .attr(\"text-anchor\", \"start\")\n            .text(dailyData.total))\n    }\n\n\n    // setting up tooltip with data labels\n    // const tip = d3Tip()\n    //     .attr('class', 'd3-tip')\n    //     .offset([-10, 0])\n    //     .html(function(d) {\n    //         return \"<p>\" + \"<span style='color:white'>\" + \"Day \" + d.dayCount.toLocaleString('en') + \"<br/>\" +\n    //             d.date.toLocaleDateString() + \"<br/>\" + \"</span>\" +\n    //             \"<span style='color:#BD2D28'>\" + d.total.toLocaleString('en') + \" Total\" + \"<br/>\" + \"</span>\" +\n    //             \"<span style='color:#E3BA22'>\" + d.active.toLocaleString('en') + \" Active\" + \"<br/>\" + \"</span>\" +\n    //             \"<span style='color:#A0B700'>\" + d.recovered.toLocaleString('en') + \" Recovered\" + \"<br/>\" + \"</span>\" +\n    //             \"<span style='color:#BA5F06'>\" + d.deaths.toLocaleString('en') + \" Deaths\" + \"</p>\" \n    //     })\n        \n\n\n\n\n    \n\n\n\n    // setting up svg element on card\n    const svg = select(`.${vizName}`)\n        .append(\"svg\")\n        .attr(\"preserveAspectRatio\", \"xMinYMid meet\")\n        .attr(\"viewBox\", [0, 0, width, height])\n\n    // const g = svg.append(\"g\")\n    //     .attr(\"fill\", color(caseType))\n    //     .selectAll('rect')\n    //     .data(dailyData)\n    //     .join(\"rect\")\n    //     .attr('x', d => xScale(d.dayCount))\n\n    //     .attr(\"y\", d => yScale(d[`${caseType}`]))\n    //     .attr(\"width\", xScale.bandwidth())\n    //     .attr(\"height\", d => yScale(0) - yScale(d[`${caseType}`]))\n    //     .attr(\"class\", \"bar\")\n    //     .on('mouseover', tip.show)\n    //     .on('mouseout', tip.hide)\n\n    \n\n    const g = svg.append('path')\n        .attr(\"fill\", \"none\")\n        .datum(dailyData)\n        // .attr('x', d => xScale(d.dayCount))\n\n        .attr('stroke', color(caseType))\n        .attr('stroke-width', 2)\n        .attr('class', 'line') \n        .attr('d', lineGenerator)\n        // .attr(\"y\", d => yScale(d[`${caseType}`]))\n        // .attr(\"width\", xScale.bandwidth())\n        // .attr(\"height\", d => yScale(0) - yScale(d[`${caseType}`]))\n\n    // const s = svg.append('path')\n    //     .attr(\"fill\", \"none\")\n    //     .datum(dailyData)\n    //     // .attr('x', d => xScale(d.dayCount))\n\n    //     .attr('stroke', color(caseType))\n    //     .attr('stroke-width', 2)\n    //     .attr('class', 'line') \n    //     .attr('d', lineGenerator)\n\n\n    const xAxisG = svg.append('g')\n        .call(xAxis)\n        \n    xAxisG.select('.domain').remove();\n    \n    xAxisG.append('text')\n        .attr('class', 'axis-label')\n        .attr('y', 45)\n        .attr('x', innerWidth / 2)\n        .attr('fill', 'black')\n        .text(xAxisLabel)\n\n\n\n\n\n\n\n    const yAxisG = svg.append('g')\n        .call(yAxis)\n        \n    yAxisG.select('.domain').remove();\n    \n    yAxisG.append('text')\n        .attr('class', 'axis-label')\n        .attr('y', -60)\n        .attr('x', -height / 2)\n        .attr('fill', 'black')\n        .attr('transform', `rotate(-90)`)\n        .attr('text-anchor', 'middle')\n        .text(yAxisLabel);\n\n\n\n    const titleG = svg.append(\"g\")\n\n    titleG.append('text')\n        .attr('class', 'title')\n        .attr('x', width / 2)\n        .attr('y', 40)\n        .attr('text-anchor', 'middle')\n        .text(title);\n\n    titleG.append('text')\n        .attr('class', 'subtitle')\n        .attr('x', width / 2)\n        .attr('y', 70)\n        .attr('text-anchor', 'middle')\n        .text(subtitle());\n\n    // svg.call(tip);\n\n}\n\n\n\n\nexport default DrawBar"]},"metadata":{},"sourceType":"module"}