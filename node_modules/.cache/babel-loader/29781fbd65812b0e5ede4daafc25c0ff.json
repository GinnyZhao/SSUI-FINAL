{"ast":null,"code":"import { max, scaleBand, scaleLinear, axisBottom, axisLeft, select } from 'd3';\nimport { line, curveMonotoneX } from 'd3-shape';\nimport { color } from './Color';\nimport \"./DrawLine.css\";\n\nconst DrawLine = (names, data, slugs, caseType) => {\n  console.log(names);\n  console.log(data);\n  console.log(slugs);\n  caseType ? caseType = caseType : caseType = \"total\";\n  const width = 960;\n  const height = 500;\n  const padding = .2;\n  const margin = {\n    top: 80,\n    right: 100,\n    bottom: 80,\n    left: 80\n  };\n  const innerWidth = width - margin.left - margin.right;\n  const vizName = \"viz\";\n\n  function capFirst(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  const xAxisLabel = \"Number of Days\";\n  const yAxisLabel = caseType ? `Number of Cases: ${capFirst(caseType)}` : \"Number of Cases\";\n  let title = \"\";\n\n  if (caseType === \"deaths\") {\n    title = \"COVID-19 deaths\";\n  } else if (caseType === \"daily_deaths\") {\n    title = \"COVID-19 daily deaths\";\n  } else {\n    title = `COVID-19 ${caseType} cases`;\n  }\n\n  let l = [];\n  data.map((d, idx) => {\n    l.push(d.length);\n  });\n  const i = l.indexOf(Math.max.apply(Math, l)); // console.log(l)\n  // console.log(i)\n\n  console.log(data[i]);\n  const xScale = scaleBand().domain(data[i].map(d => d.dayCount)).range([margin.left, width - margin.right]).padding(padding);\n  console.log(data[i][0].date.toLocaleDataString()); // const subtitle = () => {\n  //     if (dailyData.length > 0) {\n  //         return totalCases.toLocaleString('en') + \" COVID-19 Cases Reported Since \" + dailyData[0].date.toLocaleDateString()\n  //     } else {\n  //         return totalCases + \" COVID-19 Cases Reported\"\n  //     }\n  // }\n\n  let l2 = [];\n  let m = 0;\n  data.map((dat, idx) => {\n    m = max(dat, d => d[`${caseType}`]);\n    l2.push(m);\n  });\n  console.log(l2);\n  const largest = Math.max.apply(Math, l2);\n  console.log(largest);\n  const yScale = scaleLinear().domain([0, largest]).range([height - margin.bottom, margin.top]);\n  const svg = select(`.${vizName}`).append(\"svg\").attr(\"preserveAspectRatio\", \"xMinYMid meet\").attr(\"viewBox\", [0, 0, width, height]);\n  data.map((dat, idx) => {\n    console.log(dat[dat.length - 1]);\n    console.log(dat[dat.length - 1][caseType]);\n    const lineGenerator = line().x(d => xScale(d.dayCount)).y(d => yScale(d[`${caseType}`])).curve(curveMonotoneX);\n    const s = svg.append('path').attr(\"fill\", \"none\").datum(dat) // .attr('stroke', `#${((1<<24)*Math.random()|0).toString(16)}`)\n    .attr('stroke', color(caseType)).attr(\"class\", `line country${(idx + 1).toString()}`).attr('stroke-width', 2).attr('class', 'line').attr('d', lineGenerator);\n    const t = svg.append('text').text(names[idx]).attr(\"dy\", \".35em\").attr(\"text-anchor\", \"start\").attr(\"transform\", `translate(${width - 90}, ${yScale(dat[dat.length - 1][caseType]) + 10})`);\n  });\n\n  const xAxis = g => {\n    g.attr(\"transform\", `translate(0,${height - margin.bottom})`).call(axisBottom(xScale).tickValues(xScale.domain().filter(function (d, i) {\n      return !((i + 1) % 10);\n    }))).call(g => g.append(\"text\").attr(\"x\", -margin.left).attr(\"y\", 10).attr(\"fill\", \"currentColor\").attr(\"text-anchor\", \"start\").text(data[i].dayCount));\n  };\n\n  const xAxisG = svg.append('g').call(xAxis);\n  xAxisG.select('.domain').remove();\n  xAxisG.append('text').attr('class', 'axis-label').attr('y', 45).attr('x', innerWidth / 2).attr('fill', 'black').text(xAxisLabel);\n\n  const yAxis = g => {\n    g.attr(\"transform\", `translate(${margin.left},0)`).call(axisLeft(yScale).ticks(null, data[i].format).tickSize(-innerWidth)).call(g => g.select(\".domain\").remove()).call(g => g.append(\"text\").attr(\"x\", -margin.left).attr(\"y\", 10).attr(\"fill\", \"currentColor\").attr(\"text-anchor\", \"start\").text(data[i].total));\n  };\n\n  const yAxisG = svg.append('g').call(yAxis);\n  yAxisG.select('.domain').remove();\n  yAxisG.append('text').attr('class', 'axis-label').attr('y', -60).attr('x', -height / 2).attr('fill', 'black').attr('transform', `rotate(-90)`).attr('text-anchor', 'middle').text(yAxisLabel);\n  const titleG = svg.append(\"g\");\n  titleG.append('text').attr('class', 'title').attr('x', width / 2).attr('y', 40).attr('text-anchor', 'middle').text(title);\n};\n\n_c = DrawLine;\nexport default DrawLine;\n\nvar _c;\n\n$RefreshReg$(_c, \"DrawLine\");","map":{"version":3,"sources":["/Users/Ginny 1/Desktop/SSUI-FINAL/src/d3/DrawLine.js"],"names":["max","scaleBand","scaleLinear","axisBottom","axisLeft","select","line","curveMonotoneX","color","DrawLine","names","data","slugs","caseType","console","log","width","height","padding","margin","top","right","bottom","left","innerWidth","vizName","capFirst","string","charAt","toUpperCase","slice","xAxisLabel","yAxisLabel","title","l","map","d","idx","push","length","i","indexOf","Math","apply","xScale","domain","dayCount","range","date","toLocaleDataString","l2","m","dat","largest","yScale","svg","append","attr","lineGenerator","x","y","curve","s","datum","toString","t","text","xAxis","g","call","tickValues","filter","xAxisG","remove","yAxis","ticks","format","tickSize","total","yAxisG","titleG"],"mappings":"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","sourcesContent":["import { max, scaleBand, scaleLinear, axisBottom, axisLeft, select } from 'd3';\nimport { line, curveMonotoneX } from 'd3-shape';\nimport { color } from './Color'\nimport \"./DrawLine.css\"\n\n\n\n\nconst DrawLine = (names, data, slugs, caseType) => {\n    console.log(names)\n    console.log(data)\n    console.log(slugs)\n    caseType ? caseType = caseType : caseType = \"total\";\n    const width = 960\n    const height = 500\n    const padding = .2\n    const margin = ({top: 80, right: 100, bottom: 80, left: 80})\n    const innerWidth = width - margin.left - margin.right;\n    const vizName = \"viz\"\n\n\n    function capFirst(string) {\n        return string.charAt(0).toUpperCase() + string.slice(1);\n    }\n\n    const xAxisLabel = \"Number of Days\"\n    const yAxisLabel = caseType ? `Number of Cases: ${capFirst(caseType)}` : \"Number of Cases\"\n    let title = \"\"\n    if (caseType===\"deaths\") {\n        title = \"COVID-19 deaths\"\n    }\n    else if (caseType === \"daily_deaths\") {\n        title = \"COVID-19 daily deaths\"\n        \n    }\n    else {\n        title = `COVID-19 ${caseType} cases`\n    }\n\n\n    let l =[] \n    data.map((d,idx) => {\n        l.push(d.length)\n    })\n\n    const i = l.indexOf(Math.max.apply(Math, l))\n    // console.log(l)\n    // console.log(i)\n\n    console.log(data[i])\n\n    const xScale = scaleBand()\n        .domain(data[i].map(d => d.dayCount))\n        .range([margin.left, width - margin.right])\n        .padding(padding)\n    \n    console.log(data[i][0].date.toLocaleDataString())\n    // const subtitle = () => {\n    //     if (dailyData.length > 0) {\n    //         return totalCases.toLocaleString('en') + \" COVID-19 Cases Reported Since \" + dailyData[0].date.toLocaleDateString()\n    //     } else {\n    //         return totalCases + \" COVID-19 Cases Reported\"\n    //     }\n    // }\n    \n    let l2 = []\n    let m = 0\n    data.map((dat,idx) =>  {\n        m = max(dat, d => d[`${caseType}`])\n        l2.push(m)\n    })\n    console.log(l2)\n    const largest = Math.max.apply(Math, l2)\n    console.log(largest)\n\n\n    const yScale = scaleLinear()\n        .domain([0, largest])\n        .range([height - margin.bottom, margin.top])\n\n\n    const svg = select(`.${vizName}`)\n    .append(\"svg\")\n    .attr(\"preserveAspectRatio\", \"xMinYMid meet\")\n    .attr(\"viewBox\", [0, 0, width, height])\n\n    data.map((dat, idx) => {\n        console.log(dat[dat.length-1])\n        console.log(dat[dat.length-1][caseType])\n        const lineGenerator = line()\n        .x(d =>  xScale(d.dayCount))\n        .y(d =>  yScale(d[`${caseType}`]))\n        .curve(curveMonotoneX);\n\n        const s = svg.append('path')\n        .attr(\"fill\", \"none\")\n        .datum(dat)\n        // .attr('stroke', `#${((1<<24)*Math.random()|0).toString(16)}`)\n        .attr('stroke', color(caseType))\n\n        .attr(\"class\", `line country${(idx + 1).toString()}`)\n        .attr('stroke-width', 2)\n        .attr('class', 'line') \n        .attr('d', lineGenerator)\n\n        const t = svg.append('text')\n        .text(names[idx])\n        .attr(\"dy\", \".35em\")\n        .attr(\"text-anchor\", \"start\")\n        .attr(\"transform\", `translate(${width - 90}, ${yScale(dat[dat.length-1][caseType])+10})`)\n\n\n\n\n\n\n    })\n\n    const xAxis = (g) => {\n        g.attr(\"transform\", `translate(0,${height - margin.bottom})`)\n        .call(axisBottom(xScale)\n        .tickValues(xScale.domain().filter(function(d,i){ return !(((i+1)%10))})))\n\n\n        .call(g => g.append(\"text\")\n            .attr(\"x\", -margin.left)\n            .attr(\"y\", 10)\n            .attr(\"fill\", \"currentColor\")\n            .attr(\"text-anchor\", \"start\")\n            .text(data[i].dayCount))\n    }\n\n\n    const xAxisG = svg.append('g')\n        .call(xAxis)\n        \n    xAxisG.select('.domain').remove();\n    \n    xAxisG.append('text')\n        .attr('class', 'axis-label')\n        .attr('y', 45)\n        .attr('x', innerWidth / 2)\n        .attr('fill', 'black')\n        .text(xAxisLabel)\n\n\n    const yAxis = (g) => {\n        g.attr(\"transform\", `translate(${margin.left},0)`)\n        .call(axisLeft(yScale).ticks(null, data[i].format).tickSize(-innerWidth))\n            \n            .call(g => g.select(\".domain\").remove())\n\n        .call(g => g.append(\"text\")\n            .attr(\"x\", -margin.left)\n            .attr(\"y\", 10)\n            .attr(\"fill\", \"currentColor\")\n            .attr(\"text-anchor\", \"start\")\n            .text(data[i].total))\n    }\n\n\n    const yAxisG = svg.append('g')\n    .call(yAxis)\n    \n    yAxisG.select('.domain').remove();\n\n    yAxisG.append('text')\n        .attr('class', 'axis-label')\n        .attr('y', -60)\n        .attr('x', -height / 2)\n        .attr('fill', 'black')\n        .attr('transform', `rotate(-90)`)\n        .attr('text-anchor', 'middle')\n        .text(yAxisLabel);\n\n\n\n    const titleG = svg.append(\"g\")\n\n    titleG.append('text')\n        .attr('class', 'title')\n        .attr('x', width / 2)\n        .attr('y', 40)\n        .attr('text-anchor', 'middle')\n        .text(title);\n\n\n\n\n\n}\n\n\nexport default DrawLine"]},"metadata":{},"sourceType":"module"}